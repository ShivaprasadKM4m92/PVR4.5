<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="180">
  <HTTPTask id="1042" hostname="pvr-perf.rxlogix.com" path="/reports/report/archive?id=34591" url="https://pvr-perf.rxlogix.com/reports/report/archive?id=34591" ip="52.52.225.91" port="443" connectionId="36" origin="Primary" frame="1" startDateTime="2020-06-01T19:04:25.875+05:30" startTime="33600875" endTime="33601312">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>aWQ9MzQ1OTE=</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="id" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>MzQ1OTE=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHZyLXBlcmYucnhsb2dpeC5jb20=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgzLjAuNDEwMy42MSBTYWZhcmkvNTM3LjM2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Site" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2FtZS1vcmlnaW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Mode" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmF2aWdhdGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-User" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PzE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Dest" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZG9jdW1lbnQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9wdnItcGVyZi5yeGxvZ2l4LmNvbS9yZXBvcnRzL3JlcG9ydC9pbmRleA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0VTU0lPTj0wNGFmN2UyMy05YzIwLTQ4ZWItOTM5OC02NTBkOTYzMjM4NzA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9yZXBvcnRzL3JlcG9ydC9hcmNoaXZlP2lkPTM0NTkxIEhUVFAvMS4xDQpIb3N0OiBwdnItcGVyZi5yeGxvZ2l4LmNvbQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgzLjAuNDEwMy42MSBTYWZhcmkvNTM3LjM2DQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkNClNlYy1GZXRjaC1TaXRlOiBzYW1lLW9yaWdpbg0KU2VjLUZldGNoLU1vZGU6IG5hdmlnYXRlDQpTZWMtRmV0Y2gtVXNlcjogPzENClNlYy1GZXRjaC1EZXN0OiBkb2N1bWVudA0KUmVmZXJlcjogaHR0cHM6Ly9wdnItcGVyZi5yeGxvZ2l4LmNvbS9yZXBvcnRzL3JlcG9ydC9pbmRleA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KQ29va2llOiBTRVNTSU9OPTA0YWY3ZTIzLTljMjAtNDhlYi05Mzk4LTY1MGQ5NjMyMzg3MA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SESSION" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MDRhZjdlMjMtOWMyMC00OGViLTkzOTgtNjUwZDk2MzIzODcw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Date" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAwMSBKdW4gMjAyMCAxMzozMzowNCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>REVOWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Application-Context" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb246cHJvZHVjdGlvbjo5MDkw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Location" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9wdnItcGVyZi5yeGxvZ2l4LmNvbS9yZXBvcnRzL3JlcG9ydC9pbmRleA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMzAyIA0KRGF0ZTogTW9uLCAwMSBKdW4gMjAyMCAxMzozMzowNCBHTVQNClRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpYLUZyYW1lLU9wdGlvbnM6IERFTlkNClgtQXBwbGljYXRpb24tQ29udGV4dDogYXBwbGljYXRpb246cHJvZHVjdGlvbjo5MDkwDQpMb2NhdGlvbjogaHR0cHM6Ly9wdnItcGVyZi5yeGxvZ2l4LmNvbS9yZXBvcnRzL3JlcG9ydC9pbmRleA0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXN0b3JlDQpQcmFnbWE6IG5vLWNhY2hlDQpYLVhTUy1Qcm90ZWN0aW9uOiAxDQpYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="33601312" offset="0" length="354" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="1046" hostname="pvr-perf.rxlogix.com" path="/reports/report/index" url="https://pvr-perf.rxlogix.com/reports/report/index" ip="52.52.225.91" port="443" connectionId="36" origin="Redirection" startDateTime="2020-06-01T19:04:25.883+05:30" startTime="33601312" endTime="33602484">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>cHZyLXBlcmYucnhsb2dpeC5jb20=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgzLjAuNDEwMy42MSBTYWZhcmkvNTM3LjM2</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Site" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>c2FtZS1vcmlnaW4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Mode" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmF2aWdhdGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-User" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>PzE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Dest" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZG9jdW1lbnQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9wdnItcGVyZi5yeGxvZ2l4LmNvbS9yZXBvcnRzL3JlcG9ydC9pbmRleA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0VTU0lPTj0wNGFmN2UyMy05YzIwLTQ4ZWItOTM5OC02NTBkOTYzMjM4NzA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9yZXBvcnRzL3JlcG9ydC9pbmRleCBIVFRQLzEuMQ0KSG9zdDogcHZyLXBlcmYucnhsb2dpeC5jb20NCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84My4wLjQxMDMuNjEgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC45DQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuYXZpZ2F0ZQ0KU2VjLUZldGNoLVVzZXI6ID8xDQpTZWMtRmV0Y2gtRGVzdDogZG9jdW1lbnQNClJlZmVyZXI6IGh0dHBzOi8vcHZyLXBlcmYucnhsb2dpeC5jb20vcmVwb3J0cy9yZXBvcnQvaW5kZXgNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjkNCkNvb2tpZTogU0VTU0lPTj0wNGFmN2UyMy05YzIwLTQ4ZWItOTM5OC02NTBkOTYzMjM4NzANCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="SESSION" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MDRhZjdlMjMtOWMyMC00OGViLTkzOTgtNjUwZDk2MzIzODcw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>0</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Date" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAwMSBKdW4gMjAyMCAxMzozMzowNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Transfer-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y2h1bmtlZA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>REVOWQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Application-Context" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb246cHJvZHVjdGlvbjo5MDkw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cache-Control" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Pragma" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY2FjaGU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-XSS-Protection" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Content-Type-Options" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm9zbmlmZg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Language" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIA0KRGF0ZTogTW9uLCAwMSBKdW4gMjAyMCAxMzozMzowNCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sO2NoYXJzZXQ9VVRGLTgNClRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpYLUZyYW1lLU9wdGlvbnM6IERFTlkNClgtQXBwbGljYXRpb24tQ29udGV4dDogYXBwbGljYXRpb246cHJvZHVjdGlvbjo5MDkwDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZSwgbm8tc3RvcmUNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDENClgtQ29udGVudC1UeXBlLU9wdGlvbnM6IG5vc25pZmYNCkNvbnRlbnQtTGFuZ3VhZ2U6IGVuDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PCFET0NUWVBFIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIAoKPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiPgo8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UsY2hyb21lPTEiPgo8dGl0bGU+CiAgICAKICAgICAgICBQViBSZXBvcnRzIC0gQWRob2MgUmVwb3J0cwogICAgCjwvdGl0bGU+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvcmVwb3J0cy9hc3NldHMvZmF2aWNvbi0yYmEwMGZkNDBmYWNhM2FjM2MyZTgxMGE3NDEyYmNlYi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiI+CjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iL3JlcG9ydHMvYXNzZXRzL2FwcGxpY2F0aW9uLTNkMTAwNDg2YmI2MGQ0ZWUzMDAzZDRlZTlmOGQ4OTNlLmNzcyIvPgoKPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvcmVwb3J0cy9hc3NldHMvdGhlbWVfZ3JhZGllbnRfYmx1ZS04YTdiYzM1Nzc4YzY2YzJhMzRiMzQ2Y2RkZDEwMWFkNy5jc3MiLz4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9yZXBvcnRzL2Fzc2V0cy9hcHAvcnhhcHBsaWNhdGlvbi1lZWJlYmJlYjYzMmE4MmU4NjA4MjA5ZGEzYWI0MmVmMi5qcyIgPjwvc2NyaXB0PgoKPHNjcmlwdD4KICAgIHVzZXJMb2NhbGUgPSAiZW4iOwogICAgbW9tZW50LmxvY2FsZSh1c2VyTG9jYWxlKTsKICAgIHVzZXJUaW1lWm9uZSA9ICJVVEMiOwogICAgaWYgKHVzZXJMb2NhbGUgPT0gSkFQQU5FU0VfTE9DQUxFKSB7CiAgICAgICAgREVGQVVMVF9EQVRFX0RJU1BMQVlfRk9STUFUID0gIllZWVkvTU0vREQiOwogICAgICAgIERFRkFVTFRfREFURV9USU1FX0RJU1BMQVlfRk9STUFUID0gIllZWVkvTU0vREQgaGg6bW0gQSI7CiAgICB9Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQ+CiAgICB2YXIgQVBQX1BBVEg9Jy9yZXBvcnRzJzsKICAgIHZhciBBUFBfQVNTRVRTX1BBVEg9Jy9yZXBvcnRzL2Fzc2V0cy8nOwogICAgJC5hamF4KHsKICAgICAgICB1cmw6IEFQUF9BU1NFVFNfUEFUSCsnaTE4bi8nICsgdXNlckxvY2FsZSArICcuanNvbicsCiAgICAgICAgZGF0YVR5cGU6ICdqc29uJywKICAgICAgICBhc3luYzogZmFsc2UsCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgICAkLmkxOG4ubG9hZChkYXRhKTsKICAgICAgICB9CiAgICB9KTsKCiAgICAgICAgdmFyIHJlc2l6ZWZ1bmMgPSBbXTsKCiAgICA8L3NjcmlwdD4KICAgIAogICAgPG1ldGEgbmFtZT0ibGF5b3V0IiBjb250ZW50PSJtYWluIi8+CiAgICAKCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvaGFuZGxlYmFyL2hhbmRsZWJhcnMtdjQuMC4xMS01YzM2MmZkZDA3YjkzYTM5YjYwMGNlYTQzMTY1MzAyZi5qcyIgPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL3Nob3J0ZW4vanF1ZXJ5LnNob3J0ZW4tNzQ4MjUzZGE3OGM2MjU3YWNlZDQ1Y2FhNTkzMWI0M2IuanMiID48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9yZXBvcnRzL2Fzc2V0cy9hcHAvY29uZmlndXJhdGlvbi9kZWxpdmVyeU9wdGlvbi0xNWRjOGQ5YzljZDlkYzllNmM5YzUwZDgwOTFiZWQyMC5qcyIgPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2FwcC9yZXBvcnQvcmVwb3J0LTY0Mjk0MGE0NGU0YTI4NjZjYzg4YzU3NTZlMDA1YjRiLmpzIiA+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvYXBwL2NvbW1vbkdlbmVyYXRlZFJlcG9ydHNBY3Rpb25zLTkyY2Q3ZWEyN2MxZmE2MTFhYjcyMjU3ZWYyOGJkNGExLmpzIiA+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvYXBwL2RhdGFUYWJsZXNBY3Rpb25CdXR0b25zLWRiYWE0ZjE5YmVkMWIwYWMxMTExODY5OTg3NjcyMGNiLmpzIiA+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvYXBwL2FjdGlvbkl0ZW0vYWN0aW9uSXRlbU1vZGFsLTNhYWQ5ZTNhZjA3OTdkYjRjNDFiMTYyN2UyM2I0NjRkLmpzIiA+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvYXBwL3dvcmtGbG93LTNiNzg1MDBiODFmZDYxY2U1YjU5Y2MyMDJhNTRlNjNjLmpzIiA+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvZnVlbHV4L2Z1ZWx1eC01ODkxMGVjNmJkNTAyZTdjNGFhYmY4NTkyMjEzMTYxNi5qcyIgPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2FwcC91dGlscy9wdnItY29tbW9uLXV0aWwtOGZmMTRhZjhhMzc3MmQyZmNkOWE4NDM5ZmNiMTU2ZmMuanMiID48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii9yZXBvcnRzL2Fzc2V0cy9hcHAvdXRpbHMvcHZyLWZpbHRlci11dGlsLWY2OTQxMzRiZWRkMGFjMGZmYzQ2Y2QyNDk5OGQ1ZjU0LmpzIiA+PC9zY3JpcHQ+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9yZXBvcnRzL2Fzc2V0cy9mdWVsdXgtYjdjZjVjNWM2ODFmY2RiZDYzMTU2Mjg0NTE2YzkwZTkuY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii9yZXBvcnRzL2Fzc2V0cy93b3JrZmxvd01vZGFsLTU0OTFmMGMyMWJhMTFlMjAyNzNmMzVlZWYwYWM0NmY5LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvcmVwb3J0cy9hc3NldHMvY29weVBhc3RlTW9kYWwtZTUzOGZkYWRmYTliYjQwYmVlZmRhNjIzMTZiNjI2OGYuY3NzIi8+CgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KCiAgICAgICAgdmFyIGluZGV4UmVwb3J0VXJsID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZhcGlcdTAwMmZyZXBvcnRzIjsKICAgICAgICB2YXIgc2hvd1JlcG9ydFVybCA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmcmVwb3J0XHUwMDJmc2hvd0ZpcnN0U2VjdGlvbiI7CiAgICAgICAgdmFyIHVwZGF0ZVN0YXR1c1VybCA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmcmVwb3J0XHUwMDJmdXBkYXRlU3RhdHVzIjsKICAgICAgICB2YXIgd29ya2Zsb3dKdXN0aWZpY2F0aW9uVXJsPSJcdTAwMmZyZXBvcnRzXHUwMDJmd29ya2Zsb3dKdXN0aWZpY2F0aW9uUmVzdFx1MDAyZmluZGV4IgogICAgICAgIHZhciBnZXRTaGFyZWRXaXRoID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZyZXBvcnRSZXN1bHRSZXN0XHUwMDJmZ2V0U2hhcmVkV2l0aFVzZXJzIjsKICAgICAgICB2YXIgZ2V0RW1haWxUbyA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmcmVwb3J0UmVzdWx0UmVzdFx1MDAyZmdldEVtYWlsVG9Vc2VycyI7CiAgICAgICAgdmFyIHRhcmdldFN0YXRlc0FuZEFwcGxpY2F0aW9uc1VybD0gIlx1MDAyZnJlcG9ydHNcdTAwMmZwZXJpb2RpY1JlcG9ydFx1MDAyZnRhcmdldFN0YXRlc0FuZEFwcGxpY2F0aW9ucyI7CiAgICAgICAgdmFyIHdvcmtmbG93SnVzdGlmaWNhdGlvbkNvbmZpcm5Vcmw9Ilx1MDAyZnJlcG9ydHNcdTAwMmZ3b3JrZmxvd0p1c3RpZmljYXRpb25SZXN0XHUwMDJmc2F2ZSI7CiAgICAgICAgdmFyIGFkZEVtYWlsQ29uZmlndXJhdGlvbj0iXHUwMDJmcmVwb3J0c1x1MDAyZnJlcG9ydFx1MDAyZmFkZEVtYWlsQ29uZmlndXJhdGlvbiI7CiAgICAgICAgdmFyIHZpZXdBY3Rpb25JdGVtVXJsID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZhY3Rpb25JdGVtXHUwMDJmdmlldyI7CiAgICAgICAgdmFyIGxpc3RBY3Rpb25JdGVtVXJsID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZhY3Rpb25JdGVtUmVzdFx1MDAyZmluZGV4IjsKICAgICAgICB2YXIgc2F2ZUFjdGlvbkl0ZW1VcmwgPSAiXHUwMDJmcmVwb3J0c1x1MDAyZmFjdGlvbkl0ZW1cdTAwMmZzYXZlIjsKICAgICAgICB2YXIgdXBkYXRlQWN0aW9uSXRlbVVybCA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmYWN0aW9uSXRlbVx1MDAyZnVwZGF0ZSI7CiAgICAgICAgdmFyIGVtYWlsQWRkVXJsID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZlbWFpbFx1MDAyZmF4YWpBZGQiOwogICAgICAgIHZhciBjaGVja0RlbGV0ZUZvckFsbEFsbG93ZWRVUkwgPSAiXHUwMDJmcmVwb3J0c1x1MDAyZnJlcG9ydFx1MDAyZmNoZWNrRGVsZXRlRm9yQWxsQWxsb3dlZCI7CiAgICAgICAgdmFyIGhhc0Rtc0ludGVncmF0aW9uID0gZmFsc2U7CiAgICAgICAgdmFyIGRtc0ZvbGRlcnNVcmwgPSAiXHUwMDJmcmVwb3J0c1x1MDAyZnBlcmlvZGljUmVwb3J0XHUwMDJmZ2V0RG1zRm9sZGVycyI7CiAgICAgICAgdmFyIGFkZERtc0NvbmZpZ3VyYXRpb24gPSAiXHUwMDJmcmVwb3J0c1x1MDAyZnJlcG9ydFx1MDAyZmFkZERtc0NvbmZpZ3VyYXRpb24iOwogICAgICAgIHZhciBMSU5LUyA9IHsKICAgICAgICAgICAgdG9QREYgOiAiXHUwMDJmcmVwb3J0c1x1MDAyZnJlcG9ydFx1MDAyZmV4cG9ydFJlcG9ydEZyb21JbmJveD9vdXRwdXRGb3JtYXQ9UERGIiwKICAgICAgICAgICAgdG9FeGNlbCA6ICJcdTAwMmZyZXBvcnRzXHUwMDJmcmVwb3J0XHUwMDJmZXhwb3J0UmVwb3J0RnJvbUluYm94P291dHB1dEZvcm1hdD1YTFNYIiwKICAgICAgICAgICAgdG9Xb3JkIDogIlx1MDAyZnJlcG9ydHNcdTAwMmZyZXBvcnRcdTAwMmZleHBvcnRSZXBvcnRGcm9tSW5ib3g/b3V0cHV0Rm9ybWF0PURPQ1giLAogICAgICAgICAgICB0b1Bvd2VyUG9pbnQgOiAiXHUwMDJmcmVwb3J0c1x1MDAyZnJlcG9ydFx1MDAyZmV4cG9ydFJlcG9ydEZyb21JbmJveD9vdXRwdXRGb3JtYXQ9UFBUWCIsCiAgICAgICAgICAgIHRvU2hhcmUgOiAiXHUwMDJmcmVwb3J0c1x1MDAyZnJlcG9ydFx1MDAyZnNoYXJlIiwKICAgICAgICAgICAgdG9FbWFpbCA6ICJcdTAwMmZyZXBvcnRzXHUwMDJmcmVwb3J0XHUwMDJmZW1haWwiLAogICAgICAgICAgICB0b0FyY2hpdmUgOiAiXHUwMDJmcmVwb3J0c1x1MDAyZnJlcG9ydFx1MDAyZmFyY2hpdmUiCiAgICAgICAgfQogICAgICAgICB2YXIgdG9GYXZvcml0ZSA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmcmVwb3J0XHUwMDJmZmF2b3JpdGUiOwogICAgICAgICB2YXIgb3duZXJMaXN0VXJsID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZ1c2VyUmVzdFx1MDAyZm93bmVyRmlsdGVyTGlzdD9jbGF6ej1jb20ucnhsb2dpeC5jb25maWcuRXhlY3V0ZWRDb25maWd1cmF0aW9uIjsKICAgICAgICAgdmFyIG93bmVyVmFsdWVzVXJsID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZ1c2VyUmVzdFx1MDAyZnVzZXJWYWx1ZSI7CiAgICAgICAgIHZhciBoYXNBY2Nlc3NPbkFjdGlvbkl0ZW0gPSBmYWxzZTsKICAgICAgICAKICAgICAgICAgICAgaGFzQWNjZXNzT25BY3Rpb25JdGVtID0gdHJ1ZTsKICAgICAgICAKICAgIA0KPC9zY3JpcHQ+DQoKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgICAgICA8bWV0YSBuYW1lPSJfY3NyZiIgY29udGVudD0iNThjMzc3MGEtN2RmMy00M2FiLWJjYTUtNGZmNjc4Y2ZmMDE1Ii8+CiAgICAgICAgPG1ldGEgbmFtZT0iX2NzcmZfaGVhZGVyIiBjb250ZW50PSJYLUNTUkYtVE9LRU4iLz4KICAgICAgICA8bWV0YSBuYW1lPSJfY3NyZl9wYXJhbWV0ZXIiIGNvbnRlbnQ9Il9jc3JmIi8+CiAgICAKCjwvaGVhZD4KCjxib2R5IGNsYXNzPSJmaXhlZC1sZWZ0Ij4KCjwhLS0gQmVnaW4gcGFnZSAtLT4KPGRpdiBpZD0id3JhcHBlciIgY2xhc3M9ImVubGFyZ2VkIGZvcmNlZCI+CgogICAgCiAgICAKICAgIDwhLS0gVG9wIEJhciBTdGFydCAtLT4KICAgICAgICAgICAgCgoKCgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvYXBwL3B1c2hOb3RpZmljYXRpb24tM2QwODgxNzIwMGRjZWIwYTQwNWQ5ZjdhZWZhMzE5MmYuanMiID48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KCiAgICBmdW5jdGlvbiBsb2dvdXRSeFNlc3Npb24oKSB7CiAgICAgIGNsZWFyRm9ybUlucHV0c0NoYW5nZUZsYWcoJChkb2N1bWVudCkpOwogICAgICAkLmZuLmlkbGVUaW1lb3V0KCkubG9nb3V0KCk7CiAgICB9CiAgICB2YXIgbm90aWZpY2F0aW9uVVJMID0gIlx1MDAyZnJlcG9ydHNcdTAwMmZub3RpZmljYXRpb25SZXN0XHUwMDJmZm9yVXNlclx1MDAyZjMyMTgwIjsKICAgIHZhciBub3RpZmljYXRpb25DaGFubmVsID0iXHUwMDJmbm90aWZpY2F0aW9uc1x1MDAyZjE4ZjdjZjBkM2U2ODAzMTcwMzlhYzg5ZGFjNTFkMTJkIjsKICAgIHZhciBub3RpZmljYXRpb25XU1VSTCA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmc3RvbXAiOwogICAgdmFyIHZpZXdOb3RpZmljYXRpb25FcnJvclVSTCA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmZXhlY3V0aW9uU3RhdHVzXHUwMDJmdmlld05vdGlmaWNhdGlvbkVycm9yIjsKICAgIHZhciBub3RpZmljYXRpb25EZWxldGVVUkwgPSAiXHUwMDJmcmVwb3J0c1x1MDAyZm5vdGlmaWNhdGlvblJlc3RcdTAwMmZkZWxldGVOb3RpZmljYXRpb25CeUlkIjsKICAgIHZhciBub3RpZmljYXRpb25EZWxldGVCeVVzZXJVUkwgPSAiXHUwMDJmcmVwb3J0c1x1MDAyZm5vdGlmaWNhdGlvblJlc3RcdTAwMmZkZWxldGVOb3RpZmljYXRpb25zRm9yVXNlcklkIjsKICAgIHZhciByZXBvcnRSZWRpcmVjdFVSTCA9ICJcdTAwMmZyZXBvcnRzXHUwMDJmcmVwb3J0XHUwMDJmc2hvd0ZpcnN0U2VjdGlvbiI7CiAgICAKICAgIHZhciBoYXNBY2Nlc3NPbkFjdGlvbkl0ZW0gPSB0cnVlOwogICAgCiAgICAKDQo8L3NjcmlwdD4NCgoKPGRpdiBjbGFzcz0idG9wYmFyIj4KICAgIDwhLS0gTE9HTyAtLT4KICAgIDxkaXYgY2xhc3M9InB1bGwtbGVmdCI+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnV0dG9uLW1lbnUtbW9iaWxlIG9wZW4tbGVmdCB3YXZlcy1lZmZlY3QiPgogICAgICAgICAgICA8aSBjbGFzcz0ibWQgbWQtbWVudSI+PC9pPgogICAgICAgIDwvYnV0dG9uPgogICAgICAgIDxzcGFuIGNsYXNzPSJjbGVhcmZpeCI+PC9zcGFuPgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0idG9wYmFyLWxlZnQiPgogICAgICAgIDxkaXYgY2xhc3M9InB1bGwtbGVmdCI+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGEgaHJlZj0iL3JlcG9ydHMvZGFzaGJvYXJkL2luZGV4Ij48aW1nIHNyYz0iL3JlcG9ydHMvYXNzZXRzL3B2cl9sb2dvLTQyMzNlYTZlZmViMmRkYjA5ZDg5NDE1MDcxYjU1NDc4LnBuZyIgY2xhc3M9InB2TG9nbyIvPjwvYT4KICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDwhLS0gTmF2YmFyIC0tPgogICAgPGRpdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1kZWZhdWx0IiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSIiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiBoaWRkZW4teHMgcHVsbC1sZWZ0Ij4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2IG5hdmJhci1yaWdodCBwdWxsLXJpZ2h0Ij4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJoaWRkZW4teHMgbS10LTEwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0idGV4dC13aGl0ZSBsb2dpbi11c2VyLWZ1bGxuYW1lIj5XZWxjb21lIFNoaXZhLlByYXNhZCE8L2g1PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC13aGl0ZSBsYXN0LWxvZ2luLWRhdGUtdGltZS1ib3giPjxiPkxhc3QgTG9naW48L2I+IDogIDAxLUp1bi0yMDIwIDAxOjE5IFBNIChHTVQgKzAwOjAwKTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0ibWVudU5vdGlmaWNhdGlvbiIgY2xhc3M9ImRyb3Bkb3duIGhpZGRlbi14cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgZGF0YS10YXJnZXQ9IiMiIGNsYXNzPSJkcm9wZG93bi10b2dnbGUgd2F2ZXMtZWZmZWN0IHdhdmVzLWxpZ2h0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPSJkcm9wZG93biIgYXJpYS1leHBhbmRlZD0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtZCBtZC1ub3RpZmljYXRpb25zIj48L2k+IDxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0ibm90aWZpY2F0aW9uQmFkZ2UiICBjbGFzcz0iYmFkZ2UgYmFkZ2UteHMgYmFkZ2UtcGluayI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1sZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0ibm90aWZpY2F0aW9uSGVhZGVyIiBjbGFzcz0idGV4dC1jZW50ZXIgbm90aWZpLXRpdGxlIj48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9Im5vdGlmaWNhdGlvblJvd3MiIGNsYXNzPSJsaXN0LWdyb3VwIG5pY2VzY3JvbGwgbm90aWZpY2F0aW9uLWxpc3QiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBpZD0iY2xlYXJOb3RpZmljYXRpb25zIiBjbGFzcz0iIHRleHQtcmlnaHQiIHVzZXJJZD0iMzIxODAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD48Yj5DbGVhciBhbGw8L2I+PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImhpZGRlbi14cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBkYXRhLXRhcmdldD0iIyIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSB3YXZlcy1lZmZlY3Qgd2F2ZXMtbGlnaHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGFyaWEtZXhwYW5kZWQ9InRydWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtZCBtZC1zZXR0aW5ncyI+PC9pPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0iZHJvcGRvd24tbWVudSB0b3BOYXZNZW51Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGlkPSJoZWxwIj48YSBocmVmPSIvcmVwb3J0cy9kYXNoYm9hcmQvaW5kZXgiIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0ibWQgbWQtaGVscCI+PC9pPiBIZWxwPC9hPjwvbGk+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9ImV4ZWN1dGlvblN0YXR1cyI+PGEgaHJlZj0iL3JlcG9ydHMvZXhlY3V0aW9uU3RhdHVzL2xpc3QiPjxpIGNsYXNzPSJtZCBtZC1hbGFybSI+PC9pPiBFeGVjdXRpb24gU3RhdHVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRpdmlkZXIiPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9InVzZXJNYW5hZ2VtZW50Ij48YSBocmVmPSIvcmVwb3J0cy91c2VyL2luZGV4Ij5Vc2VyIE1hbmFnZW1lbnQ8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGlkPSJ1c2VyTWFuYWdlbWVudCI+PGEgaHJlZj0iL3JlcG9ydHMvdXNlckdyb3VwL2luZGV4Ij5Hcm91cCBNYW5hZ2VtZW50PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0icm9sZU1hbmFnZW1lbnQiPjxhIGhyZWY9Ii9yZXBvcnRzL3JvbGUvaW5kZXgiPlJvbGUgTWFuYWdlbWVudDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9ImZpZWxkTWFuYWdlbWVudCI+PGEgaHJlZj0iL3JlcG9ydHMvcmVwb3J0RmllbGQvaW5kZXgiPkZpZWxkIE1hbmFnZW1lbnQ8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0ianNvbkRvd25sb2FkZWQiPjxhIGhyZWY9Ii9yZXBvcnRzL3F1ZXJ5VGVtcGxhdGVKU09OL2luZGV4Ij5Eb3dubG9hZCBKU09OczwvYT4gPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGlkPSJjdXN0b21GaWVsZCI+PGEgaHJlZj0iL3JlcG9ydHMvY3VzdG9tRmllbGQvaW5kZXgiPkN1c3RvbSBGaWVsZHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9InVzZXJNYW5hZ2VtZW50Ij48YSBocmVmPSIvcmVwb3J0cy9kYXNoYm9hcmREaWN0aW9uYXJ5L2luZGV4Ij5EYXNoYm9hcmRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGlkPSJ1c2VyTWFuYWdlbWVudCI+PGEgaHJlZj0iL3JlcG9ydHMvZmllbGRQcm9maWxlL2luZGV4Ij5GaWVsZCBQcm9maWxlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0ic291cmNlUHJvZmlsZU1hbmFnZW1lbnQiPjxhIGhyZWY9Ii9yZXBvcnRzL3NvdXJjZVByb2ZpbGUvaW5kZXgiPlNvdXJjZSBQcm9maWxlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0id29ya2Zsb3dTdGF0ZSI+PGEgaHJlZj0iL3JlcG9ydHMvd29ya2Zsb3dTdGF0ZS9pbmRleCI+V29ya2Zsb3cgU3RhdGU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGlkPSJ3b3JrZmxvd1J1bGUiPjxhIGhyZWY9Ii9yZXBvcnRzL3dvcmtmbG93UnVsZS9pbmRleCI+V29ya2Zsb3cgUnVsZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9InJlcG9ydFJlcXVlc3RUeXBlIj48YSBocmVmPSIvcmVwb3J0cy9yZXBvcnRSZXF1ZXN0VHlwZS9pbmRleCI+UmVwb3J0IFJlcXVlc3QgU2V0dGluZ3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGlkPSJ0YXNrVGVtcGxhdGUiPjxhIGhyZWY9Ii9yZXBvcnRzL3Rhc2tUZW1wbGF0ZS9pbmRleCI+VGFzayBUZW1wbGF0ZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9ImV0bFNjaGVkdWxlciI+PGEgaHJlZj0iL3JlcG9ydHMvZXRsU2NoZWR1bGUvaW5kZXgiPkVUTCBTY2hlZHVsZXI8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGlkPSJhdWRpdExvZyI+PGEgaHJlZj0iL3JlcG9ydHMvYXVkaXRMb2cvaW5kZXgiPkF1ZGl0IExvZzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9ImNvbnRyb2xQYW5lbCI+PGEgaHJlZj0iL3JlcG9ydHMvY29udHJvbFBhbmVsL2luZGV4Ij5Db250cm9sIFBhbmVsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0icmVwb3J0Rm9vdGVyIj48YSBocmVmPSIvcmVwb3J0cy9yZXBvcnRGb290ZXIvaW5kZXgiPkZvb3RlciBDb25maWd1cmF0aW9uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0icmVwb3J0Rm9vdGVyIj48YSBocmVmPSIvcmVwb3J0cy9lbWFpbC9pbmRleCI+RW1haWwgQ29uZmlndXJhdGlvbjwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgaWQ9InJlcG9ydEZvb3RlciI+PGEgaHJlZj0iL3JlcG9ydHMvZW1haWxUZW1wbGF0ZS9pbmRleCI+RW1haWwgVGVtcGxhdGU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRpdmlkZXIiPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBpZD0ibWVudVByZWZlcmVuY2UiPjxhIGhyZWY9Ii9yZXBvcnRzL3ByZWZlcmVuY2UvaW5kZXgiPjxpIGNsYXNzPSJtZCBtZC1zZXR0aW5ncyI+PC9pPiBQcmVmZXJlbmNlczwvYT48L2xpPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJkaXZpZGVyIj48L2xpPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9tb25pdG9yaW5nIj5Nb25pdG9yaW5nPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9xdWFydHoiPkpvYnMgTW9uaXRvcmluZzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRpdmlkZXIiPjwvbGk+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgb25jbGljaz0ibG9nb3V0UnhTZXNzaW9uKCk7IiB0eXBlPSJidXR0b24iPjxpIGNsYXNzPSJtZCBtZC1leGl0LXRvLWFwcCI+PC9pPiBMb2dvdXQ8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+CiAgICA8IS0tIFRvcCBCYXIgRW5kIC0tPgoKICAgIDwhLS0gTGVmdCBTaWRlYmFyIFN0YXJ0IC0tPgogICAgCiAgICAKCgo8ZGl2IGNsYXNzPSJsZWZ0IHNpZGUtbWVudSI+CiAgICA8ZGl2IGNsYXNzPSJzaWRlYmFyLWlubmVyIHNsaW1zY3JvbGxsZWZ0Ij4KICAgICAgICA8ZGl2IGlkPSJzaWRlYmFyLW1lbnUiPgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imhhc19zdWIiPjxhIGhyZWY9Ii9yZXBvcnRzL2Rhc2hib2FyZC9pbmRleCIgY2xhc3M9IndhdmVzLWVmZmVjdCB3YXZlcy1wcmltYXJ5Ij48aQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWQgbWQtZGFzaGJvYXJkIj48L2k+PHNwYW4+RGFzaGJvYXJkPC9zcGFuPjxzcGFuIGNsYXNzPSJtZW51LWFycm93Ij48L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvZGFzaGJvYXJkL25ld0Rhc2hib2FyZCI+PGkgY2xhc3M9ImZhIGZhLXBsdXMiPjwvaT5OZXcgRGFzaGJvYXJkPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imhhc19zdWIiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIEFkaG9jIFJlcG9ydHMgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJ3YXZlcy1lZmZlY3Qgd2F2ZXMtcHJpbWFyeSI+PGkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWQgbWQtZ3JpZC1vbiI+PC9pPiA8c3Bhbj5BZGhvYyBSZXBvcnRzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1lbnUtYXJyb3ciPjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIExvYWQgQ29uZmlndXJhdGlvbnMgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL2NvbmZpZ3VyYXRpb24vbG9hZCI+TG9hZCBDb25maWd1cmF0aW9uczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIE5ldyBSZXBvcnQgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL2NvbmZpZ3VyYXRpb24vY3JlYXRlIj5OZXcgUmVwb3J0PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTmV3IFJlcG9ydCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgIGNsYXNzPSJjcmVhdGVBZGhvY0Zyb21UZW1wbGF0ZSI+Q3JlYXRlIEZyb20gVGVtcGxhdGU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBMaWJyYXJ5IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9jb25maWd1cmF0aW9uL2luZGV4Ij5Db25maWd1cmF0aW9uIExpYnJhcnk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBHZW5lcmF0ZWQgUmVwb3J0cyAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvcmVwb3J0L2luZGV4Ij5HZW5lcmF0ZWQgUmVwb3J0czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaGFzX3N1YiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gUGVyaW9kaWMgUmVwb3J0cyAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgY2xhc3M9IndhdmVzLWVmZmVjdCB3YXZlcy1wcmltYXJ5Ij48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtZCBtZC1jYWxsLW1lcmdlIj48L2k+PHNwYW4+QWdncmVnYXRlIFJlcG9ydHM8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWVudS1hcnJvdyI+PC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LXVuc3R5bGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTmV3IFJlcG9ydCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvcGVyaW9kaWNSZXBvcnQvY3JlYXRlIj5OZXcgUmVwb3J0PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTmV3IFJlcG9ydCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgIGNsYXNzPSJjcmVhdGVBZ2dyZWdhdGVGcm9tVGVtcGxhdGUiPkNyZWF0ZSBGcm9tIFRlbXBsYXRlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBMaWJyYXJ5IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL3BlcmlvZGljUmVwb3J0L2luZGV4Ij5Db25maWd1cmF0aW9uIExpYnJhcnk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gR2VuZXJhdGVkIFJlcG9ydHMgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvcGVyaW9kaWNSZXBvcnQvcmVwb3J0cyI+R2VuZXJhdGVkIFJlcG9ydHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gVmlldyBTdWJtaXNzaW9uIEhpc3RvcnkgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvcmVwb3J0U3VibWlzc2lvbi9pbmRleCI+VmlldyBTdWJtaXNzaW9uIEhpc3Rvcnk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gQnVsayBTY2hlZHVsaW5nIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9wZXJpb2RpY1JlcG9ydC9idWxrVXBkYXRlIj5CdWxrIFVwZGF0ZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imhhc19zdWIiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIENhc2UgU2VyaWVzIC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBjbGFzcz0id2F2ZXMtZWZmZWN0IHdhdmVzLXByaW1hcnkiPjxpIGNsYXNzPSJtZCBtZC12aWV3LWNvbHVtbiI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+Q2FzZSBTZXJpZXM8L3NwYW4+IDxzcGFuIGNsYXNzPSJtZW51LWFycm93Ij48L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Imxpc3QtdW5zdHlsZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBOZXcgQ2FzZSBTZXJpZXMgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL2Nhc2VTZXJpZXMvY3JlYXRlIj5OZXcgQ2FzZSBTZXJpZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIEdlbmVyYXRlZCBDYXNlIFNlcmllcyAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9jYXNlU2VyaWVzL2luZGV4Ij5Db25maWd1cmF0aW9uIExpYnJhcnk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gR2VuZXJhdGVkIENhc2UgU2VyaWVzIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL2V4ZWN1dGVkQ2FzZVNlcmllcy9pbmRleCI+R2VuZXJhdGVkIENhc2UgU2VyaWVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPCEtLSBUZW1wbGF0ZXMgLS0+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJoYXNfc3ViIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgY2xhc3M9IndhdmVzLWVmZmVjdCB3YXZlcy1wcmltYXJ5Ij48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtZCBtZC1ub3ctd2lkZ2V0cyI+PC9pPjxzcGFuPlRlbXBsYXRlczwvc3Bhbj4gPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWVudS1hcnJvdyI+PC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LXVuc3R5bGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBMb2FkIFRlbXBsYXRlcyAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvdGVtcGxhdGUvbG9hZCI+TG9hZCBUZW1wbGF0ZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIFRlbXBsYXRlIExpYnJhcnkgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvdGVtcGxhdGUvaW5kZXgiPlRlbXBsYXRlIExpYnJhcnk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTmV3IENhc2UgTGluZSBMaXN0aW5nIFRlbXBsYXRlIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy90ZW1wbGF0ZS9jcmVhdGU/dGVtcGxhdGVUeXBlPUNBU0VfTElORSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ldyBDYXNlIExpbmUgTGlzdGluZyBUZW1wbGF0ZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gTmV3IERhdGEgVGFidWxhdGlvbiBUZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvdGVtcGxhdGUvY3JlYXRlP3RlbXBsYXRlVHlwZT1EQVRBX1RBQiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ldyBEYXRhIFRhYnVsYXRpb24gVGVtcGxhdGU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBOZXcgQ3VzdG9tIFNRTCBUZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvdGVtcGxhdGUvY3JlYXRlP3RlbXBsYXRlVHlwZT1DVVNUT01fU1FMIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmV3IEN1c3RvbSBTUUwgVGVtcGxhdGU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIE5ldyBOb24gQ2FzZSBUZW1wbGF0ZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3JlcG9ydHMvdGVtcGxhdGUvY3JlYXRlP3RlbXBsYXRlVHlwZT1OT05fQ0FTRSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ldyBOb24gQ2FzZSBUZW1wbGF0ZTwvYT48L2xpPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBOZXcgVGVtcGxhdGUgU2V0IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy90ZW1wbGF0ZS9jcmVhdGU/dGVtcGxhdGVUeXBlPVRFTVBMQVRFX1NFVCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ldyBUZW1wbGF0ZSBTZXQ8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDwhLS0gUXVlcmllcyAtLT4KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imhhc19zdWIiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBjbGFzcz0id2F2ZXMtZWZmZWN0IHdhdmVzLXByaW1hcnkiPjxpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1kIG1kLWZpbHRlci1saXN0Ij48L2k+PHNwYW4+UXVlcmllczwvc3Bhbj4gPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWVudS1hcnJvdyI+PC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LXVuc3R5bGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBMb2FkIFF1ZXJpZXMgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL3F1ZXJ5L2xvYWQiPkxvYWQgUXVlcmllczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gUXVlcnkgTGlicmFyeSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9xdWVyeS9pbmRleCI+UXVlcnkgTGlicmFyeTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBOZXcgUXVlcnkgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL3F1ZXJ5L2NyZWF0ZSI+TmV3IFF1ZXJ5PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Imhhc19zdWIiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIERhdGEgQW5hbHlzaXMgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJ3YXZlcy1lZmZlY3Qgd2F2ZXMtcHJpbWFyeSI+PGkgY2xhc3M9Im1kIG1kLXRyZW5kaW5nLXVwIj48L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj4gRGF0YSBBbmFseXNpcyA8L3NwYW4+IDxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1lbnUtYXJyb3ciPjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIEFuYWx5c2lzIEZpbGUgTGlicmFyeSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9kYXRhQW5hbHlzaXMvaW5kZXgiPkFuYWx5c2lzIEZpbGUgTGlicmFyeTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBOZXcgQW5hbHlzaXMgRmlsZSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9kYXRhQW5hbHlzaXMvY3JlYXRlIj5OZXcgQW5hbHlzaXMgRmlsZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iaGFzX3N1YiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gVGFza3MgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIGNsYXNzPSJ3YXZlcy1lZmZlY3Qgd2F2ZXMtcHJpbWFyeSI+PGkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWQgbWQtYXNzaWdubWVudCI+PC9pPjxzcGFuPiBUYXNrcyA8L3NwYW4+IDxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1lbnUtYXJyb3ciPjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0ibGlzdC11bnN0eWxlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gUmVwb3J0IFJlcXVlc3RzIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL3JlcG9ydFJlcXVlc3QvaW5kZXgiPlJlcG9ydCBSZXF1ZXN0czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gQWN0aW9uIEl0ZW1zIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZXBvcnRzL2FjdGlvbkl0ZW0vaW5kZXgiPkFjdGlvbiBJdGVtczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8IS0tIFBSIENhbGVuZGFyIC0tPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvcmVwb3J0cy9jYWxlbmRhci9pbmRleCIgY2xhc3M9IndhdmVzLWVmZmVjdCB3YXZlcy1wcmltYXJ5Ij48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1kIG1kLWV2ZW50Ij48L2k+PHNwYW4+Q2FsZW5kYXI8L3NwYW4+PC9hPjwvbGk+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4KICAgIDwvZGl2PgogICAgCjwvZGl2Pgo8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0iY3JlYXRlRnJvbVRlbXBsYXRlTW9kYWwiICBkYXRhLWJhY2tkcm9wPSJzdGF0aWMiIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9IiIgIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1sZyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJ4bWFpbi1jb250YWluZXIiPjxkaXYgY2xhc3M9InJ4bWFpbi1jb250YWluZXItaW5uZXIiPjxkaXYgY2xhc3M9InJ4bWFpbi1jb250YWluZXItcm93IHJ4bWFpbi1jb250YWluZXItaGVhZGVyIj48ZGl2IGNsYXNzPSJkcm9wZG93biI+PGxhYmVsIGNsYXNzPSJyeG1haW4tY29udGFpbmVyLWhlYWRlci1sYWJlbCI+Q3JlYXRlIEZyb20gVGVtcGxhdGU8L2xhYmVsPjxpIGNsYXNzPSJwdWxsLXJpZ2h0IG1kIG1kLWNsb3NlIG1kLWxnIHJ4bWFpbi1kcm9wZG93bi1zZXR0aW5ncyIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+PC9pPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9InJvdyByeG1haW4tY29udGFpbmVyLWNvbnRlbnQiPgogICAgICAgICAgICAgICAgPHRhYmxlIGlkPSJyeFRhYmxlVGVtcGxhdGVDb25maWd1cmF0aW9uIiBjbGFzcz0icm93LWJvcmRlciBob3ZlciIgd2lkdGg9IjEwMCUiPgogICAgICAgICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0icmVwb3J0TmFtZUNvbHVtbiI+UmVwb3J0IE5hbWU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InJlcG9ydERlc2NyaXB0aW9uQ29sdW1uIj5EZXNjcmlwdGlvbjwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EYXRlIENyZWF0ZWQ8L3RoPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPC90aGVhZD4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZGl2PjwvZGl2PjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gLy5tb2RhbC1jb250ZW50IC0tPgogICAgPC9kaXY+CiAgICA8IS0tIC8ubW9kYWwtZGlhbG9nIC0tPgo8L2Rpdj4KPCEtLSAvLm1vZGFsIC0tPgoKICAgIDwhLS0gTGVmdCBTaWRlYmFyIEVuZCAtLT4KICAgIAogICAgPCEtLSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAtLT4KICAgIDwhLS0gU3RhcnQgcmlnaHQgQ29udGVudCBoZXJlIC0tPgogICAgPCEtLSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAtLT4KICAgIDxkaXYgY2xhc3M9ImNvbnRlbnQtcGFnZSI+CiAgICAgICAgPCEtLSBTdGFydCBjb250ZW50IC0tPgogICAgICAgIDxkaXYgaWQ9Im1haW5Db250ZW50IiBjbGFzcz0iY29udGVudCIgc3R5bGU9IiI+CiAgICAgICAgICAgIAoKICAgIDxkaXYgY2xhc3M9InJ4bWFpbi1jb250YWluZXIiPjxkaXYgY2xhc3M9InJ4bWFpbi1jb250YWluZXItaW5uZXIiPjxkaXYgY2xhc3M9InJ4bWFpbi1jb250YWluZXItcm93IHJ4bWFpbi1jb250YWluZXItaGVhZGVyIj48ZGl2IGNsYXNzPSJkcm9wZG93biI+PGxhYmVsIGNsYXNzPSJyeG1haW4tY29udGFpbmVyLWhlYWRlci1sYWJlbCI+QWRob2MgUmVwb3J0czwvbGFiZWw+PGkgY2xhc3M9InB1bGwtcmlnaHQgZHJvcGRvd24tdG9nZ2xlIG1kIG1kLWxpc3QgbWQtbGcgcnhtYWluLWRyb3Bkb3duLXNldHRpbmdzIiBpZD0iZHJvcGRvd25NZW51MSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIj48L2k+PGRpdiBjbGFzcz0icHVsbC1yaWdodCBkcm9wZG93bi1tZW51IiBhcmlhLWxhYmVsbGVkYnk9ImRyb3Bkb3duTWVudTEiPjxkaXYgY2xhc3M9InJ4bWFpbi1jb250YWluZXItZHJvcGRvd24iPjxkaXY+PHRhYmxlIGlkPSJ0YWJsZUNvbHVtbnMiIGNsYXNzPSJ0YWJsZSB0YWJsZS1jb25kZW5zZWQgcnhtYWluLWRyb3Bkb3duLXNldHRpbmdzLXRhYmxlIj48dGhlYWQ+PHRyPjx0aD5OYW1lPC90aD48dGg+U2hvdzwvdGg+PC90cj48L3RoZWFkPjwvdGFibGU+PC9kaXY+PC9kaXY+PC9kaXY+PGkgY2xhc3M9InB1bGwtcmlnaHQgZ2x5cGhpY29uIGdseXBoaWNvbi1maWx0ZXIgbGliLWZpbHRlciByeG1haW4tZHJvcGRvd24tc2V0dGluZ3MiPjwvaT48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSJyb3cgcnhtYWluLWNvbnRhaW5lci1jb250ZW50Ij4KCiAgICAgICAgCgoKCgoKCgoKICAgICAgICA8ZGl2PgogICAgICAgIDx0YWJsZSBpZD0icnhUYWJsZVJlcG9ydHMiIGNsYXNzPSJyb3ctYm9yZGVyIGhvdmVyIiBkYXRhLWktZGlzcGxheS1sZW5ndGg9IjUwIiBkYXRhLWEtbGVuZ3RoLW1lbnU9IltbNTAsIDEwMCwgMjAwLCA1MDBdLCBbNTAsIDEwMCwgMjAwLCA1MDBdXSIgd2lkdGg9IjEwMCUiPgogICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPSJmb250LXNpemU6IDE2cHgiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXN0YXIiID48L3NwYW4+PC90aD4KICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InJlcG9ydE5hbWVDb2x1bW4iPlJlcG9ydCBOYW1lPC90aD4KICAgICAgICAgICAgICAgICA8dGggY2xhc3M9InJlcG9ydERlc2NyaXB0aW9uQ29sdW1uIj5EZXNjcmlwdGlvbjwvdGg+CiAgICAgICAgICAgICAgICAgPHRoPlZlcnNpb248L3RoPgogICAgICAgICAgICAgICAgIDx0aD5Pd25lcjwvdGg+CiAgICAgICAgICAgICAgICAgPHRoPkRhdGUgR2VuZXJhdGVkPC90aD4KICAgICAgICAgICAgICAgICA8dGg+VGFnPC90aD4KICAgICAgICAgICAgICAgICA8dGg+U3RhdGU8L3RoPgogICAgICAgICAgICAgICAgIDx0aD48L3RoPgogICAgICAgICAgICAgICAgIDx0aD48L3RoPgogICAgICAgICAgICAgICAgIDx0aD5BY3Rpb248L3RoPgogICAgICAgICAgICAgPC90cj4KICAgICAgICAgPC90aGVhZD4KICAgICAgICA8L3RhYmxlPgoKICAgICAgICA8Zm9ybSBhY3Rpb249Ii9yZXBvcnRzL3JlcG9ydC9pbmRleCIgbWV0aG9kPSJwb3N0IiBvbnN1Ym1pdD0icmV0dXJuIHN1Ym1pdEZvcm0oKSIgPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZWxhdGVkUmVwb3J0cyIgaWQ9InJlbGF0ZWRSZXBvcnRzIiB2YWx1ZT0iaG9tZSIgLz4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZXhlY3V0ZWRDb25maWdJZCIgdmFsdWU9IiIgaWQ9ImV4ZWN1dGVkQ29uZmlnSWQiIC8+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0ic2hhcmVkV2l0aE1vZGFsIiAgZGF0YS1iYWNrZHJvcD0ic3RhdGljIiB0YWJpbmRleD0iLTEiIHJvbGU9ImRpYWxvZyIgYXJpYS1sYWJlbGxlZGJ5PSJteU1vZGFsTGFiZWwiPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0ibXlNb2RhbExhYmVsIj5TaGFyZSBXaXRoIFVzZXJzPC9oND4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFsZXJ0IGFsZXJ0LWRhbmdlciBoaWRlIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0iYWxlcnQiIGFyaWEtbGFiZWw9ImNsb3NlIj4mdGltZXM7PC9hPgogICAgICAgICAgICAgICAgICAgIDxzcGFuPlBsZWFzZSBmaWxsIGFsbCByZXF1aXJlZCBmaWVsZHM8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTYiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9InBhZGRpbmctbGVmdDogNXB4OyI+VXNlciBHcm91cDo8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzaGFyZWRXaXRoR3JvdXBMaXN0IiBzdHlsZT0icGFkZGluZy1sZWZ0OiA1cHg7Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0icGFkZGluZy1sZWZ0OiA1cHg7Ij5Vc2VyOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InNoYXJlZFdpdGhVc2VyTGlzdCIgc3R5bGU9InBhZGRpbmctbGVmdDogNXB4OyI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgc2hhcmVkV2l0aExpc3RVcmwgPSAiL3JlcG9ydHMvdXNlclJlc3Qvc2hhcmVkV2l0aExpc3QiOwogICAgICAgICAgICAgICAgICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaW5kU2hhcmVXaXRoKCQoJy5zaGFyZWRXaXRoQ29udHJvbCcpLCBzaGFyZWRXaXRoTGlzdFVybCxudWxsLCIxMDAlIikKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlNoYXJlIHdpdGg8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0ic2hhcmVkV2l0aENvbnRyb2wgZm9ybS1jb250cm9sIiBpZD0ic2hhcmVkV2l0aCIgbmFtZT0ic2hhcmVkV2l0aCIgdmFsdWU9IiI+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJfYWN0aW9uX3NoYXJlIiB2YWx1ZT0iQWRkIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiAvPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIGRhdGEtZGlzbWlzcz0ibW9kYWwiPgogICAgICAgICAgICAgICAgICAgIENhbmNlbAogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2PgogICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvYXBwL2VtYWlsTW9kYWwtYzMyOGY2NDUyYzE1ZWU1Yjk2MTJkNTc5OTM2OWRhODMuanMiID48L3NjcmlwdD4KPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgZGF0YS1rZXlib2FyZD0iZmFsc2UiIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgaWQ9ImVtYWlsVG9Nb2RhbCIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIj5FbWFpbCB0bzwvaDQ+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1kYW5nZXIgaGlkZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9ImFsZXJ0IiBhcmlhLWxhYmVsPSJjbG9zZSI+JnRpbWVzOzwvYT4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5QbGVhc2UgZW50ZXIgdmFsaWQgZW1haWwgYWRkcmVzczwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEwIiBzdHlsZT0icGFkZGluZy1yaWdodDogMjdweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJlbWFpbFVzZXJzIiBuYW1lPSJlbWFpbFRvVXNlcnMiIGRhdGEtdmFsdWU9IiIgY2xhc3M9ImZvcm0tY29udHJvbCBlbWFpbFVzZXJzIiBtdWx0aXBsZT0idHJ1ZSIgZGF0YS1vcHRpb25zLXVybD0iL3JlcG9ydHMvZW1haWwvYWxsRW1haWxzIiA+DQo8L3NlbGVjdD48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZhIGZhLXBhc3RlIGNvcHlQYXN0ZUVtYWlsQnV0dG9uIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaG93RW1haWxDb25maWd1cmF0aW9uTG9hZGluZyI+PGltZyBzcmM9Ii9yZXBvcnRzL2Fzc2V0cy9zZWxlY3QyLXNwaW5uZXItN2I5Nzc2MDc2ZDVmY2VlZjQ5OTNiNTVjOTM4M2RlZGQuZ2lmIiBzdHlsZT0icGFkZGluZy10b3A6IDEwcHg7Ii8+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzaG93RW1haWxDb25maWd1cmF0aW9uIiBzdHlsZT0iZGlzcGxheTogbm9uZTsgY3Vyc29yOiBwb2ludGVyOyIgZGF0YS10b2dnbGU9Im1vZGFsIgogICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtdGFyZ2V0PSIjZW1haWxDb25maWd1cmF0aW9uIj48aW1nIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2ljb25zL2VtYWlsLWQ0OWViOTZjZGIwYjU0Y2FiNzEzNTkxOWM3ZDllNTUxLnBuZyIgc3R5bGU9InBhZGRpbmctdG9wOiAxMHB4OyIgdGl0bGU9IkFkZCBlbWFpbCBjb25maWd1cmF0aW9uIi8+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBpZD0iYXR0YWNobWVudENoZWNrYm94ZXMiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGVja2JveCBjaGVja2JveC1wcmltYXJ5IGNoZWNrYm94LWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il9hdHRhY2htZW50Rm9ybWF0cyIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImF0dGFjaG1lbnRGb3JtYXRzIiBjaGVja2VkPSJjaGVja2VkIiB2YWx1ZT0iUERGIiBpZD0icGRmIiBjbGFzcz0iZW1haWxPcHRpb24iICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJwZGYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUERGCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGVja2JveCBjaGVja2JveC1wcmltYXJ5IGNoZWNrYm94LWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il9hdHRhY2htZW50Rm9ybWF0cyIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImF0dGFjaG1lbnRGb3JtYXRzIiBjaGVja2VkPSJjaGVja2VkIiB2YWx1ZT0iWExTWCIgaWQ9Inhsc3giIGNsYXNzPSJlbWFpbE9wdGlvbiIgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhsc3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhjZWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94IGNoZWNrYm94LXByaW1hcnkgY2hlY2tib3gtaW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX2F0dGFjaG1lbnRGb3JtYXRzIiAvPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iYXR0YWNobWVudEZvcm1hdHMiIGNoZWNrZWQ9ImNoZWNrZWQiIHZhbHVlPSJET0NYIiBpZD0iZG9jeCIgY2xhc3M9ImVtYWlsT3B0aW9uIiAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZG9jeCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXb3JkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGVja2JveCBjaGVja2JveC1wcmltYXJ5IGNoZWNrYm94LWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il9hdHRhY2htZW50Rm9ybWF0cyIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImF0dGFjaG1lbnRGb3JtYXRzIiBjaGVja2VkPSJjaGVja2VkIiB2YWx1ZT0iUFBUWCIgaWQ9InBwdHgiIGNsYXNzPSJlbWFpbE9wdGlvbiIgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBwdHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUG93ZXJQb2ludAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBpZD0iZm9ybWF0RXJyb3IiIGhpZGRlbj0iaGlkZGVuIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIiIHN0eWxlPSJjb2xvcjogI2ZmMDAwMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZWxlY3QgYXQgbGVhc3Qgb25lIGF0dGFjaG1lbnQgZm9ybWF0IQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9Il9hY3Rpb25fZW1haWwiIHZhbHVlPSJTZW5kIiBpZD0ic2VuZEVtYWlsYnRuIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiAvPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGlkPSJjYW5jZWxCdG4iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIGRhdGEtZGlzbWlzcz0ibW9kYWwiPgogICAgICAgICAgICAgICAgICAgIENhbmNlbAogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2Pgo8ZGl2IGlkPSJlbWFpbENvbmZpZ0NvbnRhaW5lciI+CiAgICAKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KCnZhciBlbXB0eUVtYWlsQ29uZmlnSW1hZ2U9Ilx1MDAyZnJlcG9ydHNcdTAwMmZhc3NldHNcdTAwMmZpbWFnZVx1MDAyZmljb25zXHUwMDJmZW1haWwucG5nIjsKdmFyIGVkaXRlZEVtYWlsQ29uZmlnSW1hZ2U9Ilx1MDAyZnJlcG9ydHNcdTAwMmZhc3NldHNcdTAwMmZpbWFnZVx1MDAyZmljb25zXHUwMDJmZW1haWwtc2VjdXJlLnBuZyI7CnZhciBFRElUT1JfQ1NTID0iXHUwMDJmcmVwb3J0c1x1MDAyZmFzc2V0c1x1MDAyZmVkaXRvci02ODdlNDllMjkwMWY4OWQxZTY1Y2M3NzAyNmVjMGEzZS5jc3MiOwp2YXIgREVGQVVMVF9FTUFJTF9PUFRJT05TPXsKICAgIFBBR0VfT1JJRU5UQVRJT046J1BPUlRSQUlUJywKICAgIFBBUEVSX1NJWkU6J0xFVFRFUicsCiAgICBTRU5TSVRJVklUWV9MQUJFTDonU0VOU0lUSVZFJywKICAgIFNIT1dfUEFHRV9OVU1CRVJJTkc6dHJ1ZSwKICAgIEVYQ0xVREVfQ1JJVEVSSUFfU0hFRVQ6ZmFsc2UsCiAgICBFWENMVURFX0FQUEVORElYOmZhbHNlLAogICAgRVhDTFVERV9DT01NRU5UUzpmYWxzZSwKICAgIEVYQ0xVREVfTEVHRU5EOmZhbHNlLAogICAgU0hPV19DT01QQU5ZX0xPR086dHJ1ZQoKfTsKdmFyIGxpc3RUZW1wbGF0ZVVybD0iXHUwMDJmcmVwb3J0c1x1MDAyZmVtYWlsVGVtcGxhdGVcdTAwMmZheGFqTGlzdCI7CnZhciBzYXZlVGVtcGxhdGVVcmw9Ilx1MDAyZnJlcG9ydHNcdTAwMmZlbWFpbFRlbXBsYXRlXHUwMDJmYXhhalNhdmUiOwp2YXIgZGVsZXRlVGVtcGxhdGVVcmw9Ilx1MDAyZnJlcG9ydHNcdTAwMmZlbWFpbFRlbXBsYXRlXHUwMDJmYXhhakRlbGV0ZSI7CmZ1bmN0aW9uIHRvZ2dsZUFkdmFuY2VkRW1haWxPcHRpb25zKCl7CiAgICAkKCcjYWR2YW5jZWRFbWFpbE9wdGlvbnMnKS50b2dnbGUoKTsKICAgIHZhciBjYXJldD0kKCcjYWR2YW5jZWRFbWFpbE9wdGlvbnNMaW5rJykuZmluZCgnc3BhbicpOwogICAgaWYoY2FyZXQuaGFzQ2xhc3MoImZhLWNhcmV0LXJpZ2h0IikpewogICAgICAgIGNhcmV0LnJlbW92ZUNsYXNzKCJmYS1jYXJldC1yaWdodCIpOwogICAgICAgIGNhcmV0LmFkZENsYXNzKCJmYS1jYXJldC1kb3duIik7CiAgICB9ZWxzZXsKICAgICAgICBjYXJldC5yZW1vdmVDbGFzcygiZmEtY2FyZXQtZG93biIpOwogICAgICAgIGNhcmV0LmFkZENsYXNzKCJmYS1jYXJldC1yaWdodCIpOwogICAgfQp9CgokKCBkb2N1bWVudCApLnJlYWR5KGZ1bmN0aW9uKCkgewogICQoIiNlbWFpbEJvZHlIZWxwIikuYXR0cigiZGF0YS10b2dnbGUiLCJwb3BvdmVyIiApOy8vIGhhY2sgdG8gYXZvaWQgZGVmYXVsdCBpbml0aWFsaXNhdGlvbiBvZiBwb3BvdmVyIGluIGpxdWVyeS5jb3JlLmpzCiAgJCgiI2VtYWlsQm9keUhlbHAiKS5wb3BvdmVyKHtodG1sOnRydWUsdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPSJwb3BvdmVyIiBzdHlsZT0ibWF4LXdpZHRoOjU1MHB4OyB3aWR0aDo1NTBweCI+PGRpdiBjbGFzcz0iYXJyb3ciPjwvZGl2PjxkaXYgY2xhc3M9InBvcG92ZXItaW5uZXIiPjxoMyBjbGFzcz0icG9wb3Zlci10aXRsZSI+PC9oMz48ZGl2IGNsYXNzPSJwb3BvdmVyLWNvbnRlbnQiPjxwPjwvcD48L2Rpdj48L2Rpdj48L2Rpdj4nIH0pOwogIGlmKGxvY2F0aW9uLmhyZWYuaW5kZXhPZigiU2VyaWVzIik+MCkkKCIubm9Gb3JDYXNlU2VyaWVzIikuaGlkZSgpOwp9KTsKCiQoJ2JvZHknKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgaWYgKCQoZS50YXJnZXQpLmRhdGEoJ3RvZ2dsZScpICE9PSAncG9wb3ZlcicKICAgICAgICAmJiAkKGUudGFyZ2V0KS5wYXJlbnRzKCdbZGF0YS10b2dnbGU9InBvcG92ZXIiXScpLmxlbmd0aCA9PT0gMAogICAgICAgICYmICQoZS50YXJnZXQpLnBhcmVudHMoJy5wb3BvdmVyLmluJykubGVuZ3RoID09PSAwKSB7CiAgICAgICAgJCgnW2RhdGEtdG9nZ2xlPSJwb3BvdmVyIl0nKS5wb3BvdmVyKCdoaWRlJyk7CiAgICB9Cn0pOwoNCjwvc2NyaXB0Pg0KCgo8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0iZW1haWxDb25maWd1cmF0aW9uIiBzdHlsZT0ib3ZlcmZsb3cteTogYXV0byIgZGF0YS1rZXlib2FyZD0iZmFsc2UiIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWxnIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIj5Db21wb3NlPC9oND4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTExIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJhbGVydCIgYXJpYS1sYWJlbD0iY2xvc2UiPiZ0aW1lczs8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBQbGVhc2UgZmlsbCBhbGwgcmVxdWlyZWQgZmllbGRzCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xIj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTEiIHN0eWxlPSJwYWRkaW5nLXJpZ2h0OiAyN3B4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImNjVmFsdWUiIHZhbHVlPSIiIGlkPSJjY1ZhbHVlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IHBsYWNlaG9sZGVyPSJDYyIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLmNjIiBpZD0iZW1haWxDb25maWd1cmF0aW9uLmNjIiBjbGFzcz0iZm9ybS1jb250cm9sIGVtYWlsVXNlcnMiIG11bHRpcGxlPSJ0cnVlIiBkYXRhLW9wdGlvbnMtdXJsPSIvcmVwb3J0cy9lbWFpbC9hbGxFbWFpbHNGb3JDQz9lbWFpbHM9IiA+DQo8L3NlbGVjdD48aQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZhIGZhLXBhc3RlIGNvcHlQYXN0ZUVtYWlsQnV0dG9uIj48L2k+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEiPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTExIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic3ViamVjdFZhbHVlIiBpZD0ic3ViamVjdFZhbHVlIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLnN1YmplY3QiIGNsYXNzPSJmb3JtLWNvbnRyb2wgYWRkLW1hcmdpbi1ib3R0b20iIHZhbHVlPSIiIHBsYWNlaG9sZGVyPSJTdWJqZWN0IiBpZD0iZW1haWxDb25maWd1cmF0aW9uLnN1YmplY3QiIC8+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEiPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTEiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJib2R5VmFsdWUiIHZhbHVlPSIiIGlkPSJib2R5VmFsdWUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBuYW1lPSJlbWFpbENvbmZpZ3VyYXRpb24uYm9keSIgY2xhc3M9ImZvcm0tY29udHJvbCBhZGQtbWFyZ2luLWJvdHRvbSByaWNoRWRpdG9yIiBwbGFjZWhvbGRlcj0iTWVzc2FnZSIgaWQ9ImVtYWlsQ29uZmlndXJhdGlvbi5ib2R5IiA+PC90ZXh0YXJlYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMSAiPgogICAgICAgICAgICAgICAgICAgICAgICA8aSBpZD0iZW1haWxCb2R5SGVscCIgZGF0YS1jb250YWluZXI9ImJvZHkiIGRhdGEtcGxhY2VtZW50PSJsZWZ0IiBkYXRhLWNvbnRlbnQ9JwpZb3UgY2FuIHVzZSB0aGUgZm9sbG93aW5nIHRhZ3MgaW4gdGhlIGVtYWlsIGJvZHk6CjxkaXYgY2xhc3M9InBhbmVsLWdyb3VwIiBpZD0iYWNjb3JkaW9uIiByb2xlPSJ0YWJsaXN0IiBhcmlhLW11bHRpc2VsZWN0YWJsZT0idHJ1ZSI+CiAgICA8ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1kZWZhdWx0Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lbC1oZWFkaW5nIiByb2xlPSJ0YWIiIGlkPSJoZWFkaW5nT25lIj4KICAgICAgICAgICAgPGg0IGNsYXNzPSJwYW5lbC10aXRsZSI+CiAgICAgICAgICAgICAgICA8YSByb2xlPSJidXR0b24iIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS1wYXJlbnQ9IiNhY2NvcmRpb24iIGhyZWY9IiNjb2xsYXBzZU9uZSIgYXJpYS1leHBhbmRlZD0idHJ1ZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VPbmUiPgogICAgICAgICAgICAgICAgICAgIEFkaG9jIFJlcG9ydHMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9oND4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJjb2xsYXBzZU9uZSIgY2xhc3M9InBhbmVsLWNvbGxhcHNlIGNvbGxhcHNlIGluIiByb2xlPSJ0YWJwYW5lbCIgYXJpYS1sYWJlbGxlZGJ5PSJoZWFkaW5nT25lIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFuZWwtYm9keSI+CiAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgPGxpPltyZXBvcnROYW1lXSAtIFJlcG9ydCBOYW1lPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W3ZlcnNpb25dIC0gUmVwb3J0IFZlcnNpb248L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bZGVzY3JpcHRpb25dIC0gRGVzY3JpcHRpb248L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bcHJvZHVjdFNlbGVjdGlvbl0gLSBQcm9kdWN0IFNlbGVjdGlvbjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltzdHVkeVNlbGVjdGlvbl0gLSBTdHVkeSBTZWxlY3Rpb248L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bZXZlbnRTZWxlY3Rpb25dIC0gRXZlbnQgU2VsZWN0aW9uczwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltkYXRlUmFuZ2VUeXBlXSAtIERhdGUgUmFuZ2UgVHlwZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltleGNsdWRlTm9uVmFsaWRDYXNlc10gLSBFeGNsdWRlIE5vbi1WYWxpZCBDYXNlczwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltpbmNsdWRlTWVkaWNhbGx5Q29uZmlybWVkQ2FzZXNdIC0gSW5jbHVkZSBNZWRpY2FsbHkgQ29uZmlybWVkIENhc2VzIE9ubHk8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bZXhjbHVkZUZvbGxvd1VwXSAtIEV4Y2x1ZGUgRm9sbG93LVVwPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W3N1c3BlY3RQcm9kdWN0XSAtIExpbWl0IHRvIFN1c3BlY3QgUHJvZHVjdDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltsaW1pdFByaW1hcnlQYXRoXSAtIExpbWl0IHRvIFByaW1hcnkgUGF0aDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltpbmNsdWRlTG9ja2VkVmVyc2lvbl0gLSBJbmNsdWRlIExvY2tlZCBDYXNlcyBPbmx5PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W2luY2x1ZGVBbGxTdHVkeURydWdzQ2FzZXNdIC0gSW5jbHVkZSBBbGwgU3R1ZHkgRHJ1Z3MgQ2FzZXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5baW5jbHVkZU5vblNpZ25pZmljYW50Rm9sbG93VXBdIC0gSW5jbHVkZSBOb24tU2lnbmlmaWNhbnQgRm9sbG93dXAgQ2FzZXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bb3duZXJdIC0gUmVwb3J0IE93bmVyPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W2xhc3RSdW5EYXRlXSAtIFJ1biBEYXRlIGFuZCBUaW1lPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W3N0YXR1c10gLSBFeGVjdXRpb24gU3RhdHVzPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W3dvcmtmbG93U3RhdGVdIC0gV29ya2Zsb3cgU3RhdHVzPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W3NlY3Rpb25zXSAtIFJlcG9ydCBTZWN0aW9uczwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltyZWZlclJlcG9ydF0gLSBSZWZlciBSZXBvcnQ8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InBhbmVsIHBhbmVsLWRlZmF1bHQiPgogICAgICAgIDxkaXYgY2xhc3M9InBhbmVsLWhlYWRpbmciIHJvbGU9InRhYiIgaWQ9ImhlYWRpbmdUd28iPgogICAgICAgICAgICA8aDQgY2xhc3M9InBhbmVsLXRpdGxlIj4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJjb2xsYXBzZWQiIHJvbGU9ImJ1dHRvbiIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXBhcmVudD0iI2FjY29yZGlvbiIgaHJlZj0iI2NvbGxhcHNlVHdvIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VUd28iPgogICAgICAgICAgICAgICAgICAgIEFnZ3JlZ2F0ZSBSZXBvcnRzCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0iY29sbGFwc2VUd28iIGNsYXNzPSJwYW5lbC1jb2xsYXBzZSBjb2xsYXBzZSIgcm9sZT0idGFicGFuZWwiIGFyaWEtbGFiZWxsZWRieT0iaGVhZGluZ1R3byI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPgogICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaT5bcmVwb3J0TmFtZV0gLSBSZXBvcnQgTmFtZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPlt2ZXJzaW9uXSAtIFJlcG9ydCBWZXJzaW9uPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W2Rlc2NyaXB0aW9uXSAtIERlc2NyaXB0aW9uPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W3BlcmlvZGljUmVwb3J0VHlwZV0gLSBBZ2dyZWdhdGUgUmVwb3J0IFR5cGU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bcHJvZHVjdFNlbGVjdGlvbl0gLSBQcm9kdWN0IFNlbGVjdGlvbjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltzdHVkeVNlbGVjdGlvbl0gLSBTdHVkeSBTZWxlY3Rpb248L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bZXhlY3V0ZWRHbG9iYWxRdWVyeV0gLSBHbG9iYWwgUXVlcnkgTmFtZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltnbG9iYWxEYXRlUmFuZ10gLSBHbG9iYWwgRGF0ZSBSYW5nZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltkYXRlUmFuZ2VUeXBlXSAtIERhdGUgUmFuZ2UgVHlwZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltleGNsdWRlTm9uVmFsaWRDYXNlc10gLSBFeGNsdWRlIE5vbi1WYWxpZCBDYXNlczwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltleGNsdWRlRm9sbG93VXBdIC0gRXhjbHVkZSBGb2xsb3ctVXA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bc3VzcGVjdFByb2R1Y3RdIC0gTGltaXQgdG8gU3VzcGVjdCBQcm9kdWN0PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W2luY2x1ZGVQcmV2aW91c01pc3NpbmdDYXNlc10gLSBJbmNsdWRlIENhc2VzIG1pc3NlZCBpbiB0aGUgcHJldmlvdXMgcmVwb3J0aW5nIHBlcmlvZDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltpbmNsdWRlT3BlbkNhc2VzSW5EcmFmdF0gLSBJbmNsdWRlIG9wZW4gY2FzZXMgaW4gZHJhZnQ8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5baW5jbHVkZUFsbFN0dWR5RHJ1Z3NDYXNlc10gLSBJbmNsdWRlIEFsbCBTdHVkeSBEcnVncyBDYXNlczwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltpbmNsdWRlTm9uU2lnbmlmaWNhbnRGb2xsb3dVcF0gLSBJbmNsdWRlIE5vbi1TaWduaWZpY2FudCBGb2xsb3d1cCBDYXNlczwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltvd25lcl0gLSBSZXBvcnQgT3duZXI8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bbGFzdFJ1bkRhdGVdIC0gUnVuIERhdGUgYW5kIFRpbWU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bc3RhdHVzXSAtIEV4ZWN1dGlvbiBTdGF0dXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bd29ya2Zsb3dTdGF0ZV0gLSBXb3JrZmxvdyBTdGF0dXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bc2VjdGlvbnNdIC0gUmVwb3J0IFNlY3Rpb25zPC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W3JlZmVyUmVwb3J0XSAtIFJlZmVyIFJlcG9ydDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0icGFuZWwgcGFuZWwtZGVmYXVsdCI+CiAgICAgICAgPGRpdiBjbGFzcz0icGFuZWwtaGVhZGluZyIgcm9sZT0idGFiIiBpZD0iaGVhZGluZ1RocmVlIj4KICAgICAgICAgICAgPGg0IGNsYXNzPSJwYW5lbC10aXRsZSI+CiAgICAgICAgICAgICAgICA8YSBjbGFzcz0iY29sbGFwc2VkIiByb2xlPSJidXR0b24iIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS1wYXJlbnQ9IiNhY2NvcmRpb24iIGhyZWY9IiNjb2xsYXBzZVRocmVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VUaHJlZSI+CiAgICAgICAgICAgICAgICAgICAgQ2FzZSBTZXJpZXMKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9oND4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJjb2xsYXBzZVRocmVlIiBjbGFzcz0icGFuZWwtY29sbGFwc2UgY29sbGFwc2UiIHJvbGU9InRhYnBhbmVsIiBhcmlhLWxhYmVsbGVkYnk9ImhlYWRpbmdUaHJlZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhbmVsLWJvZHkiPgogICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaT5bc2VyaWVzTmFtZV0gLSBSZXBvcnQgTmFtZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltkZXNjcmlwdGlvbl0gLSBEZXNjcmlwdGlvbjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltzdXNwZWN0UHJvZHVjdF0gLSBMaW1pdCB0byBTdXNwZWN0IFByb2R1Y3Q8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bcHJvZHVjdFNlbGVjdGlvbl0gLSBQcm9kdWN0IERpY3Rpb25hcnk8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bc3R1ZHlTZWxlY3Rpb25dIC0gU3R1ZHkgRGljdGlvbmFyeTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltkYXRlUmFuZ2VUeXBlXSAtIERhdGUgUmFuZ2UgVHlwZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltldmFsdWF0ZURhdGVBc10gLSBFdmFsdWF0ZSBPbjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltkYXRlUmFuZ2VdIC0gRGF0ZSBSYW5nZTwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltleGVjdXRlZEdsb2JhbFF1ZXJ5XSAtIFF1ZXJ5IE5hbWU8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bb3duZXJdIC0gU2NoZWR1bGVkIEJ5PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W2V4Y2x1ZGVGb2xsb3dVcF0gLSBFeGNsdWRlIEZvbGxvdy1VcDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPltpbmNsdWRlTG9ja2VkVmVyc2lvbl0gLSBJbmNsdWRlIExvY2tlZCBWZXJzaW9ucyBPbmx5PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+W2luY2x1ZGVBbGxTdHVkeURydWdzQ2FzZXNdIC0gSW5jbHVkZSBBbGwgU3R1ZHkgRHJ1Z3MgQ2FzZXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bZXhjbHVkZU5vblZhbGlkQ2FzZXNdIC0gRXhjbHVkZSBOb24tVmFsaWQgQ2FzZXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5baW5jbHVkZU5vblNpZ25pZmljYW50Rm9sbG93VXBdIC0gSW5jbHVkZSBOb24tU2lnbmlmaWNhbnQgRm9sbG93dXAgQ2FzZXM8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT5bcmVmZXJSZXBvcnRdIC0gUmVmZXIgUmVwb3J0PC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJwYW5lbCBwYW5lbC1kZWZhdWx0Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lbC1oZWFkaW5nIiByb2xlPSJ0YWIiIGlkPSJoZWFkaW5nRm91ciI+CiAgICAgICAgICAgIDxoNCBjbGFzcz0icGFuZWwtdGl0bGUiPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImNvbGxhcHNlZCIgcm9sZT0iYnV0dG9uIiBkYXRhLXRvZ2dsZT0iY29sbGFwc2UiIGRhdGEtcGFyZW50PSIjYWNjb3JkaW9uIiBocmVmPSIjY29sbGFwc2VGb3VyIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1jb250cm9scz0iY29sbGFwc2VGb3VyIj4KICAgICAgICAgICAgICAgICAgICBFeGFtcGxlCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0iY29sbGFwc2VGb3VyIiBjbGFzcz0icGFuZWwtY29sbGFwc2UgY29sbGFwc2UiIHJvbGU9InRhYnBhbmVsIiBhcmlhLWxhYmVsbGVkYnk9ImhlYWRpbmdGb3VyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFuZWwtYm9keSI+CiAgICAgICAgICAgICAgICBIaSwgdGhpcyByZXBvcnQgaW5jbHVkZXMgY2FzZXMgZm9yIFtwcm9kdWN0U2VsZWN0aW9uXSBmb3IgdGhlIGRhdGUgcmFuZ2UgW2dsb2JhbERhdGVSYW5nXSBhbmQgd2FzIGV4ZWN1dGVkIG9uIFtsYXN0UnVuRGF0ZV0uCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2PicKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZhIGZhLXF1ZXN0aW9uLWNpcmNsZSIgc3R5bGU9ImZvbnQtc2l6ZTogMjVweDsgY3Vyc29yOiBwb2ludGVyOyBkaWlzcGxheTpub25lIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvaT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94IGNoZWNrYm94LXByaW1hcnkiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImVtYWlsQ29uZmlndXJhdGlvbi5fbm9FbWFpbE9uTm9EYXRhIiAvPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLm5vRW1haWxPbk5vRGF0YSIgaWQ9Im5vRW1haWxPbk5vRGF0YSIgIC8+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ibm9FbWFpbE9uTm9EYXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ibm9FbWFpbE9uTm9EYXRhVmFsdWUiIHZhbHVlPSIiIGlkPSJub0VtYWlsT25Ob0RhdGFWYWx1ZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgRG8gbm90IHNlbmQgZW1haWwgd2hlbiByZXBvcnQgcmV0dXJucyBubyBkYXRhCiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBpZD0iYWR2YW5jZWRFbWFpbE9wdGlvbnNMaW5rIj48YSBocmVmPSJqYXZhc2NyaXB0OnRvZ2dsZUFkdmFuY2VkRW1haWxPcHRpb25zKCkiPjxzcGFuIGNsYXNzPSJmYSBmYS1sZyBmYS1jYXJldC1yaWdodCI+PC9zcGFuPiBBZHZhbmNlZCBPcHRpb25zPC9hPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBpZD0iYWR2YW5jZWRFbWFpbE9wdGlvbnMiIHN0eWxlPSJkaXNwbGF5OiBub25lO3BhZGRpbmctdG9wOiAyNXB4Ij4KCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJkaWFsb2dCb3giPlBhZ2UgT3JpZW50YXRpb24gKFBERiBhbmQgV29yZCk8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJlbWFpbENvbmZpZ3VyYXRpb24ucGFnZU9yaWVudGF0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImVtYWlsQ29uZmlndXJhdGlvbi5wYWdlT3JpZW50YXRpb24iIGNsYXNzPSJmb3JtLWNvbnRyb2wiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSJQT1JUUkFJVCI+UG9ydHJhaXQ8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iTEFORFNDQVBFIj5MYW5kc2NhcGU8L29wdGlvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJwYWdlT3JpZW50YXRpb25WYWx1ZSIgdmFsdWU9IlBPUlRSQUlUIiBpZD0icGFnZU9yaWVudGF0aW9uVmFsdWUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImRpYWxvZ0JveCI+UGFwZXIgU2l6ZSAoUERGIGFuZCBXb3JkKTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IG5hbWU9ImVtYWlsQ29uZmlndXJhdGlvbi5wYXBlclNpemUiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJlbWFpbENvbmZpZ3VyYXRpb24ucGFwZXJTaXplIiA+DQo8b3B0aW9uIHZhbHVlPSJMRVRURVIiIHNlbGVjdGVkPSJzZWxlY3RlZCIgPkxldHRlcjwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iQTQiID5BNDwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iTEVHQUwiID5MZWdhbDwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iXzExWDE3IiA+MTF4MTc8L29wdGlvbj4NCjwvc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InBhcGVyU2l6ZVZhbHVlIiB2YWx1ZT0iTEVUVEVSIiBpZD0icGFwZXJTaXplVmFsdWUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImRpYWxvZ0JveCI+U2Vuc2l0aXZpdHkgTGFiZWw8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJlbWFpbENvbmZpZ3VyYXRpb24uc2Vuc2l0aXZpdHlMYWJlbCIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImVtYWlsQ29uZmlndXJhdGlvbi5zZW5zaXRpdml0eUxhYmVsIiA+DQo8b3B0aW9uIHZhbHVlPSJDT05GSURFTlRJQUwiID5Db25maWRlbnRpYWw8L29wdGlvbj4NCjxvcHRpb24gdmFsdWU9IlBST1BSSUVUQVJZIiA+UHJvcHJpZXRhcnk8L29wdGlvbj4NCjxvcHRpb24gdmFsdWU9IlBVQkxJQyIgPlB1YmxpYzwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iU0VOU0lUSVZFIiBzZWxlY3RlZD0ic2VsZWN0ZWQiID5TZW5zaXRpdmU8L29wdGlvbj4NCjxvcHRpb24gdmFsdWU9Ik5PTkUiID5Ob25lPC9vcHRpb24+DQo8L3NlbGVjdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzZW5zaXRpdml0eUxhYmVsVmFsdWUiIHZhbHVlPSJTRU5TSVRJVkUiIGlkPSJzZW5zaXRpdml0eUxhYmVsVmFsdWUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImRpYWxvZ0JveCI+T3B0aW9uczwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGVja2JveCBjaGVja2JveC1wcmltYXJ5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLl9zaG93UGFnZU51bWJlcmluZyIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImVtYWlsQ29uZmlndXJhdGlvbi5zaG93UGFnZU51bWJlcmluZyIgY2hlY2tlZD0iY2hlY2tlZCIgaWQ9ImVtYWlsQ29uZmlndXJhdGlvbi5zaG93UGFnZU51bWJlcmluZyIgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImVtYWlsQ29uZmlndXJhdGlvbi5zaG93UGFnZU51bWJlcmluZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IFBhZ2UgTnVtYmVyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InNob3dQYWdlTnVtYmVyaW5nVmFsdWUiIHZhbHVlPSJ0cnVlIiBpZD0ic2hvd1BhZ2VOdW1iZXJpbmdWYWx1ZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94IGNoZWNrYm94LXByaW1hcnkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJlbWFpbENvbmZpZ3VyYXRpb24uX3Nob3dDb21wYW55TG9nbyIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImVtYWlsQ29uZmlndXJhdGlvbi5zaG93Q29tcGFueUxvZ28iIGNoZWNrZWQ9ImNoZWNrZWQiIGlkPSJlbWFpbENvbmZpZ3VyYXRpb24uc2hvd0NvbXBhbnlMb2dvIiAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZW1haWxDb25maWd1cmF0aW9uLnNob3dDb21wYW55TG9nbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTaG93IENvbXBhbnkgTG9nbwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzaG93Q29tcGFueUxvZ29WYWx1ZSIgdmFsdWU9InRydWUiIGlkPSJzaG93Q29tcGFueUxvZ29WYWx1ZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgbm9Gb3JDYXNlU2VyaWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGVja2JveCBjaGVja2JveC1wcmltYXJ5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLl9leGNsdWRlQ3JpdGVyaWFTaGVldCIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImVtYWlsQ29uZmlndXJhdGlvbi5leGNsdWRlQ3JpdGVyaWFTaGVldCIgaWQ9ImVtYWlsQ29uZmlndXJhdGlvbi5leGNsdWRlQ3JpdGVyaWFTaGVldCIgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImVtYWlsQ29uZmlndXJhdGlvbi5leGNsdWRlQ3JpdGVyaWFTaGVldCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGNsdWRlIENyaXRlcmlhIFNoZWV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImV4Y2x1ZGVDcml0ZXJpYVNoZWV0VmFsdWUiIHZhbHVlPSJmYWxzZSIgaWQ9ImV4Y2x1ZGVDcml0ZXJpYVNoZWV0VmFsdWUiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIG5vRm9yQ2FzZVNlcmllcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2hlY2tib3ggY2hlY2tib3gtcHJpbWFyeSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImVtYWlsQ29uZmlndXJhdGlvbi5fZXhjbHVkZUFwcGVuZGl4IiAvPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLmV4Y2x1ZGVBcHBlbmRpeCIgaWQ9ImVtYWlsQ29uZmlndXJhdGlvbi5leGNsdWRlQXBwZW5kaXgiICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJlbWFpbENvbmZpZ3VyYXRpb24uZXhjbHVkZUFwcGVuZGl4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4Y2x1ZGUgQXBwZW5kaXgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZXhjbHVkZUFwcGVuZGl4VmFsdWUiIHZhbHVlPSJmYWxzZSIgaWQ9ImV4Y2x1ZGVBcHBlbmRpeFZhbHVlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBub0ZvckNhc2VTZXJpZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94IGNoZWNrYm94LXByaW1hcnkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJlbWFpbENvbmZpZ3VyYXRpb24uX2V4Y2x1ZGVDb21tZW50cyIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImVtYWlsQ29uZmlndXJhdGlvbi5leGNsdWRlQ29tbWVudHMiIGlkPSJlbWFpbENvbmZpZ3VyYXRpb24uZXhjbHVkZUNvbW1lbnRzIiAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZW1haWxDb25maWd1cmF0aW9uLmV4Y2x1ZGVDb21tZW50cyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGNsdWRlIEFubm90YXRpb25zCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImV4Y2x1ZGVDb21tZW50c1ZhbHVlIiB2YWx1ZT0iZmFsc2UiIGlkPSJleGNsdWRlQ29tbWVudHNWYWx1ZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgbm9Gb3JDYXNlU2VyaWVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGVja2JveCBjaGVja2JveC1wcmltYXJ5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLl9leGNsdWRlTGVnZW5kIiAvPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iZW1haWxDb25maWd1cmF0aW9uLmV4Y2x1ZGVMZWdlbmQiIGlkPSJlbWFpbENvbmZpZ3VyYXRpb24uZXhjbHVkZUxlZ2VuZCIgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImVtYWlsQ29uZmlndXJhdGlvbi5leGNsdWRlTGVnZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4Y2x1ZGUgTGVnZW5kCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImV4Y2x1ZGVMZWdlbmRWYWx1ZSIgdmFsdWU9ImZhbHNlIiBpZD0iZXhjbHVkZUxlZ2VuZFZhbHVlIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgaWQ9ImNhbmNlbEVtYWlsQ29uZmlndXJhdGlvbiIgPgogICAgICAgICAgICAgICAgICAgIENhbmNlbAogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgaWQ9InNhdmVFbWFpbENvbmZpZ3VyYXRpb24iPgogICAgICAgICAgICAgICAgICAgIFNhdmUKICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQiIGlkPSJyZXNldEVtYWlsQ29uZmlndXJhdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgUmVzZXQKICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9ImVtYWlsVGVtcGxhdGVMaXN0IiAgZGF0YS1rZXlib2FyZD0iZmFsc2UiIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIj5UZW1wbGF0ZSBMaXN0PC9oND4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ib3ZlcmZsb3c6IGF1dG87IGhlaWdodDogMjAwcHgiIGlkPSJ0ZW1wbGF0ZUxpc3RDb250ZW50Ij4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgZGF0YS1kaXNtaXNzPSJtb2RhbCIgYXJpYS1sYWJlbD0iQ2xvc2UiID4KICAgICAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9ImVtYWlsVGVtcGxhdGVTYXZlIiAgZGF0YS1rZXlib2FyZD0iZmFsc2UiIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIj5UZW1wbGF0ZSBMaXN0PC9oND4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJlbWFpbFRlbXBsYXRlTmFtZSI+TmFtZTxzcGFuIGNsYXNzPSJyZXF1aXJlZC1pbmRpY2F0b3IiPio8L3NwYW4+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJlbWFpbFRlbXBsYXRlTmFtZSIgbmFtZT0iZW1haWxUZW1wbGF0ZU5hbWUiICBjbGFzcz0iZm9ybS1jb250cm9sIi8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImVtYWlsVGVtcGxhdGVEZXNjcmlwdGlvbiI+RGVzY3JpcHRpb248c3BhbiBjbGFzcz0icmVxdWlyZWQtaW5kaWNhdG9yIj4qPC9zcGFuPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iZW1haWxUZW1wbGF0ZURlc2NyaXB0aW9uIiBuYW1lPSJlbWFpbFRlbXBsYXRlRGVzY3JpcHRpb24iICBjbGFzcz0iZm9ybS1jb250cm9sIi8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIGlkPSJzYXZlRW1haWxUZW1wbGF0ZSI+CiAgICAgICAgICAgICAgICAgICAgU2F2ZQogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgZGF0YS1kaXNtaXNzPSJtb2RhbCIgYXJpYS1sYWJlbD0iQ2xvc2UiID4KICAgICAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL3RpbnltY2UvdGlueW1jZS5taW4tODkxM2FlMmQ4YjVlNjM5NjFiNTljYjY4MTI5MTQxMGIuanMiID48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2FwcC9lbWFpbFRlbXBsYXRlRWRpdG9yLTM0MGExYTk2ZDYyOWM3NTZiYTExOTJjYTBiZWM3MTc5LmpzIiA+PC9zY3JpcHQ+CjxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJjb25maXJtYXRpb25Nb2RhbCIgIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0iY29uZmlybWF0aW9uTW9kYWxMYWJlbCIKICAgICBhcmlhLWhpZGRlbj0idHJ1ZSI+CiAgICA8ZGl2IGNsYXNzPSJ2ZXJ0aWNhbC1hbGlnbm1lbnQtaGVscGVyIj4KCiAgICAgICAgPCEtLSBNb2RhbCBEaWFsb2cgc3RhcnRzIC0tPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyB2ZXJ0aWNhbC1hbGlnbi1jZW50ZXIiPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CgogICAgICAgICAgICAgICAgPCEtLSBNb2RhbCBoZWFkZXIgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPGg0PjxzcGFuIGNsYXNzPSJtb2RhbEhlYWRlciI+PC9zcGFuPjwvaDQ+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8IS0tIE1vZGFsIGJvZHkgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb25maXJtYXRpb25NZXNzYWdlIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iIHN0eWxlPSJmb250LXdlaWdodDpib2xkOyI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8IS0tIE1vZGFsIGZvb3RlciAtLT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRhbmdlciBva0J1dHRvbiIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXRyYXNoIGljb24td2hpdGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgRGVsZXRlIFJlY29yZAogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IiBkYXRhLWRpc21pc3M9Im1vZGFsIj5DYW5jZWw8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC9kaXY+PCEtLSBtb2RhbC1jb250ZW50IGVuZHMtLT4KICAgICAgICA8L2Rpdj48IS0tIG1vZGFsLWRpYWxvZyBlbmRzLS0+CiAgICA8L2Rpdj4KCjwvZGl2PjwhLS0gbW9kYWwgLS0+Cgo8L2Rpdj4KICAgICAgICAgICAgCjxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJzZW5kVG9EbXNNb2RhbCIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIj5VcGxvYWQgVG8gRG9jdW1lbnQgTWFuYWdlbWVudCBTeXN0ZW08L2g0PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmFkaW8gcmFkaW8taW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9ybWF0UERGIiBjaGVja2VkIG5hbWU9ImRtc0NvbmZpZ3VyYXRpb24uZm9ybWF0IiB2YWx1ZT0iUERGIi8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZvcm1hdFBERiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBQREYKICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJhZGlvIHJhZGlvLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvcm1hdFhMU1giICBuYW1lPSJkbXNDb25maWd1cmF0aW9uLmZvcm1hdCIgdmFsdWU9IlhMU1giLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZm9ybWF0WExTWCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGNlbAogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmFkaW8gcmFkaW8taW5saW5lIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0iZm9ybWF0RE9DWCIgIG5hbWU9ImRtc0NvbmZpZ3VyYXRpb24uZm9ybWF0IiB2YWx1ZT0iRE9DWCIvPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJmb3JtYXRET0NYIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdvcmQKICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJhZGlvIHJhZGlvLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgaWQ9ImZvcm1hdFBQVFgiICBuYW1lPSJkbXNDb25maWd1cmF0aW9uLmZvcm1hdCIgdmFsdWU9IlBQVFgiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZm9ybWF0UFBUWCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBQb3dlclBvaW50CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWVkaXQgc2hvd0Rtc0NvbmZpZ3VyYXRpb25EbGciIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7Zm9udC1zaXplOiAyNXB4O21hcmdpbi1sZWZ0OiAxOTBweDsiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImZvcm1hdEVycm9yIiBoaWRkZW49ImhpZGRlbiI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIiBzdHlsZT0iY29sb3I6ICNmZjAwMDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VsZWN0IGF0IGxlYXN0IG9uZSBhdHRhY2htZW50IGZvcm1hdCEKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBuYW1lPSJfYWN0aW9uX3NlbmRUb0RtcyIgdmFsdWU9IlNlbmQiIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIC8+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+CiAgICAgICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9ImRtc0NvbmZpZ0NvbnRhaW5lciI+CjwvZGl2PgogICAgICAgIDwvZm9ybT4KCiAgICAgICAgCgo8IS0tIE1vZGFsIGZvciBXb3JrZmxvdyBTdGF0ZSBKdXN0aWZpY2F0aW9uIC0tPgo8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIHdvcmtmbG93U3RhdHVzSnVzdGlmaWNhdGlvbiIgIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgc3R5bGU9Im1hcmdpbi1sZWZ0OiA1cHgiIGlkPSJ3b3JrZmxvd1N0YXR1c0p1c3RpZmljYXRpb24iCiAgICAgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBvbmNsaWNrPSdjbG9zZUp1c3RpZmljYXRpb25Nb2RhbCgpOycgYXJpYS1sYWJlbD0iQ2xvc2UiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0ibXlNb2RhbExhYmVsIj5Xb3JrZmxvdyBTdGF0dXM8L2g0PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id29ya2Zsb3ctc3RhdGUtdXBkYXRlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC13YXJuaW5nIGFsZXJ0LWRpc21pc3NpYmxlIGZvcmNlTGluZVdyYXAiIHJvbGU9ImFsZXJ0IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9ImFsZXJ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPkNsb3NlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXdhcm5pbmciPjwvaT4gV2FybmluZyEKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0id29ya2Zsb3ctd2FybmluZyI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIGhpZGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0iYWxlcnQiIGFyaWEtbGFiZWw9ImNsb3NlIj4mdGltZXM7PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0id29ya2Zsb3dFcnJvck1lc3NhZ2UiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8Zm9ybSBhY3Rpb249Ii9yZXBvcnRzL3JlcG9ydC9pbmRleC9qdXN0aWZpY2F0aW9uRm9ybSIgbWV0aG9kPSJwb3N0IiBhdXRvY29tcGxldGU9Im9mZiIgbmFtZT0ianVzdGlmaWNhdGlvbkZvcm0iIGlkPSJqdXN0aWZpY2F0aW9uRm9ybSIgPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InJlcXVpcmVkLWluZGljYXRvciI+Kjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ic2hvd1NlbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IHN0eWxlPSJoZWlnaHQ6IDMwcHg7d2lkdGg6MjUwcHg7IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJ0b1N0YXRlLmlkIiBpZD0id29ya2Zsb3dTZWxlY3QiPjwvc2VsZWN0PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndvcmtmbG93Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibmVlZEFwcHJvdmFsRGl2IiBzdHlsZT0iZGlzcGxheTogbm9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmVlZCBBcHByb3ZhbCAocmVlbnRlciBsb2dpbiBhbmQgcGFzc3dvcmQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzZXJuYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZXF1aXJlZC1pbmRpY2F0b3IiPio8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgYXV0b2NvbXBsZXRlPSJhdXRvY29tcGxldGVfb2ZmX3hmcjQhazEiICBuYW1lPSIxNTkxMDE4Mzg0OTMxIiBkaXNhYmxlZD0idHJ1ZSIgaWQ9ImxvZ2luLWlucHV0IiB2YWx1ZT0iU2hpdmEuUHJhc2FkIiBjbGFzcz0iZm9ybS1jb250cm9sIGxvZ2luLWlucHV0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBhc3N3b3JkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZXF1aXJlZC1pbmRpY2F0b3IiPio8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0icGFzc3dvcmQtaW5wdXQtZGl2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgYXV0b2NvbXBsZXRlPSJhdXRvY29tcGxldGVfb2ZmX3hmcjQhayIgIG5hbWU9IjE1OTEwMTgzODQ5MzIiIGlkPSJwYXNzd29yZC1pbnB1dCIgY2xhc3M9ImZvcm0tY29udHJvbCBwYXNzd29yZC1pbnB1dCIgdHlwZT0idGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uLXdyYXBwZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPkp1c3RpZmljYXRpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgcm93cz0iNSIgY29scz0iMyIgaWQ9ImRlc2NyaXB0aW9uIiBuYW1lPSJkZXNjcmlwdGlvbiIgbWF4bGVuZ3RoPSIyNTUiIHN0eWxlPSJoZWlnaHQ6IDExMHB4OyIgY2xhc3M9ImZvcm0tY29udHJvbCAiID48L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF4OiAyNTUgQ2hhcmFjdGVycwogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndvcmtmbG93Ij48L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImRhdGFMZW5ndGgiIGlkPSJkYXRhTGVuZ3RoIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZnJvbVN0YXRlLmlkIiBpZD0iZnJvbVN0YXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZXhlY3V0ZWRSZXBvcnRDb25maWd1cmF0aW9uLmlkIiBpZD0icmVwb3J0SWQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZXBvcnRSZXF1ZXN0LmlkIiBpZD0id2ZSZXBvcnRSZXF1ZXN0SWQiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ3b3JrZmxvd1J1bGUuaWQiIGlkPSJ3b3JrZmxvd1J1bGVJZCI+CiAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id29ya2Zsb3ctc3RhdGUtaGlzdG9yeSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPkhpc3Rvcnk8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgaWQ9IndvcmtmbG93SnVzdGlmaWNhdGlvblRhYmxlIiBib3JkZXI9IjEiIGJvcmRlcmNvbG9yPSIjRDNEM0QzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0id29ya2Zsb3dUYWJsZUhlYWQxIj5Gcm9tIFN0YXRlPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0id29ya2Zsb3dUYWJsZUhlYWQxIj5UbyBTdGF0ZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9IndvcmtmbG93VGFibGVIZWFkMSI+RGF0ZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9IndvcmtmbG93aGVhZDIiPlJvdXRlZCBCeTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9IndvcmtmbG93aGVhZDIiPkp1c3RpZmljYXRpb248L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBpZD0ic2F2ZUJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyBjb25maXJtLXBhc3RlIiBvbmNsaWNrPSJjb25maXJtSnVzdGlmaWNhdGlvbigncnhUYWJsZVJlcG9ydHMnKTsiPgogICAgICAgICAgICAgICAgICAgIENvbmZpcm0KICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgY2FuY2VsIiBvbmNsaWNrPSdjbG9zZUp1c3RpZmljYXRpb25Nb2RhbCgpOyc+CiAgICAgICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+CiAgICA8Zm9ybSBhY3Rpb249Ii9yZXBvcnRzL3JlcG9ydC9pbmRleCIgbWV0aG9kPSJwb3N0IiA+PGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX21ldGhvZCIgdmFsdWU9IkRFTEVURSIgaWQ9Il9tZXRob2QiIC8+CiAgICAgICAgPCEtLSBNb2RhbCAtLT4KCgoKCjxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJkZWxldGVNb2RhbCIgIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0iZGVsZXRlTW9kYWxMYWJlbCIKICAgICBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9InotaW5kZXg6IDk5OTk7Ij4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSIgaWQ9ImRlbGV0ZU1vZGFsTGFiZWwiPjwvaDQ+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1kYW5nZXIgYWxlcnQtZGlzbWlzc2libGUgZm9yY2VMaW5lV3JhcCIgcm9sZT0iYWxlcnQiIGlkPSJkZWxldGVEbGdFcnJvckRpdiIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0iYWxlcnQiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPkNsb3NlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jaGVjayI+PC9pPiBKdXN0aWZpY2F0aW9uIGNhbicndCBiZSBibGFuay4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBpZD0ibmFtZVRvRGVsZXRlIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxwPjwvcD4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIiBzdHlsZT0iZm9udC13ZWlnaHQ6Ym9sZDsiPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXh0cmFtZXNzYWdlIj48L2Rpdj4KCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJkZWxldGVGb3JBbGxBbGxvd2VkIiBjbGFzcz0iY2hlY2tib3ggY2hlY2tib3gtcHJpbWFyeSIgIHN0eWxlPSJkaXNwbGF5OiBub25lIj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJfZGVsZXRlRm9yQWxsIiAvPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0iZGVsZXRlRm9yQWxsIiBpZD0iZGVsZXRlRm9yQWxsIiAgLz4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJkZWxldGVGb3JBbGwiIGNsYXNzPSJhZGQtbWFyZ2luLWJvdHRvbSIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICBEZWxldGUgRm9yIEFsbCBVc2VycwogICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9Im1hcmdpbi10b3A6IDI1cHgiPkp1c3RpZmljYXRpb246PC9sYWJlbD4KICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBwbGFjZWhvbGRlcj0iRW50ZXIgdGhlIGp1c3RpZmljYXRpb24iIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5hbWU9ImRlbGV0ZUp1c3RpZmljYXRpb24iIGlkPSJkZWxldGVKdXN0aWZpY2F0aW9uIiA+PC90ZXh0YXJlYT4KCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IiBkYXRhLWRpc21pc3M9Im1vZGFsIj5DYW5jZWw8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9ImRlbGV0ZUJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGFuZ2VyIj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi10cmFzaCBpY29uLXdoaXRlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgRGVsZXRlIFJlY29yZAogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PjwhLS0gLy5tb2RhbC1jb250ZW50IC0tPgogICAgPC9kaXY+PCEtLSAvLm1vZGFsLWRpYWxvZyAtLT4KPC9kaXY+PCEtLSAvLm1vZGFsIC0tPgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2FwcC9kZWxldGVNb2RhbC02OGI4ZTc0MjgzYzgwNzA4MDFkMmFmYmFmNDA4MzFhMS5qcyIgPjwvc2NyaXB0PgoKCiAgICA8L2Zvcm0+CiAgCjxkaXYgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPgogICAgPGRpdiBpZD0ic2hhcmVkV2l0aEZpbHRlciIgY2xhc3M9ImNvbC14cy03ICIgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0Ij4KICAgICAgICA8bGFiZWwgY2xhc3M9Im5vLWJvbGQiPlNoYXJlZCBXaXRoPC9sYWJlbD4KICAgICAgICA8aW5wdXQgY2xhc3M9InNoYXJlZFdpdGhDb250cm9sIGZvcm0tY29udHJvbCIgaWQ9InNoYXJlZFdpdGhGaWx0ZXJDb250cm9sIiBuYW1lPSJzaGFyZWRXaXRoRmlsdGVyQ29udHJvbCIgdmFsdWU9IiIgc3R5bGU9Im1pbi13aWR0aDogMTAwcHg7Ij4KICAgIDwvZGl2Pgo8L2Rpdj4KPHNjcmlwdD4KICAgIGlmKCJjb20ucnhsb2dpeC5jb25maWcuRXhlY3V0ZWRDb25maWd1cmF0aW9uIiA9PSAiY29tLnJ4bG9naXguY29uZmlnLkV4ZWN1dGlvblN0YXR1cyIpewogICAgICAgIHNoYXJlZFdpdGhGaWx0ZXJMaXN0VXJsID0gIi9yZXBvcnRzL3VzZXJSZXN0L3NoYXJlZFdpdGhVc2VyTGlzdCI7CiAgICB9IGVsc2UgewogICAgICAgIHNoYXJlZFdpdGhGaWx0ZXJMaXN0VXJsID0gIi9yZXBvcnRzL3VzZXJSZXN0L3NoYXJlZFdpdGhGaWx0ZXJMaXN0P2NsYXp6PWNvbS5yeGxvZ2l4LmNvbmZpZy5FeGVjdXRlZENvbmZpZ3VyYXRpb24iOwogICAgfQogICAgc2hhcmVkV2l0aEZpbHRlclZhbHVlc1VybCA9ICIvcmVwb3J0cy91c2VyUmVzdC9zaGFyZWRXaXRoVmFsdWVzIjsKICAgIHZhciBzZXNzaW9uU3RvcmFnZVNoYXJlZFdpdGhWYXJpYWJsZU5hbWUgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXC8vZywiIikrIi5zaGFyZWRXaXRoIjsKICAgICQoJyNzaGFyZWRXaXRoRmlsdGVyQ29udHJvbCcpLnZhbChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKHNlc3Npb25TdG9yYWdlU2hhcmVkV2l0aFZhcmlhYmxlTmFtZSk/c2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShzZXNzaW9uU3RvcmFnZVNoYXJlZFdpdGhWYXJpYWJsZU5hbWUpOiIiKTsKICAgIGZ1bmN0aW9uIGluaXRTaGFyZWRXaXRoRmlsdGVyKHRhYmxlSWQsdGFibGUsd2lkdGgpIHsKICAgICAgICB2YXIgc2VhcmNoRGl2ID0gJCgnIycrdGFibGVJZCsnX2ZpbHRlcicpLnBhcmVudCgpLAogICAgICAgICAgICBzaGFyZWRXaXRoID0gJCgnI3NoYXJlZFdpdGhGaWx0ZXJDb250cm9sJyk7CiAgICAgICAgc2VhcmNoRGl2LmZpbmQoJ2lucHV0JykuY3NzKCdoZWlnaHQnLCAnNDAnKTsKICAgICAgICBzZWFyY2hEaXYuZmluZCgnaW5wdXQnKS5hdHRyKCdwbGFjZWhvbGRlcicsICQuaTE4bi5fKCJmaWVsZHByb2ZpbGUuc2VhcmNoLmxhYmVsIikpOwogICAgICAgIHNlYXJjaERpdi5maW5kKCdsYWJlbCcpLmNzcygnbWFyZ2luLWJvdHRvbScsICctMnB4Jyk7CiAgICAgICAgc2VhcmNoRGl2LmF0dHIoImNsYXNzIiwgImNvbC14cy0zIik7CiAgICAgICAgc2VhcmNoRGl2LnBhcmVudCgpLmFkZENsYXNzKCdzZWFyY2hUb29sYmFyJyk7CiAgICAgICAgc2VhcmNoRGl2LmJlZm9yZSgkKCcjc2hhcmVkV2l0aEZpbHRlcicpKTsKICAgICAgICB3aWR0aCA9IHdpZHRoP3dpZHRoOicyNTBweCc7CiAgICAgICAgYmluZFNoYXJlV2l0aChzaGFyZWRXaXRoLCBzaGFyZWRXaXRoRmlsdGVyTGlzdFVybCwgc2hhcmVkV2l0aEZpbHRlclZhbHVlc1VybCwgd2lkdGgpLm9uKCJjaGFuZ2UiLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKHNlc3Npb25TdG9yYWdlU2hhcmVkV2l0aFZhcmlhYmxlTmFtZSwgJCgnI3NoYXJlZFdpdGhGaWx0ZXJDb250cm9sJykudmFsKCkpOwogICAgICAgICAgICB0YWJsZS5kcmF3KCk7CiAgICAgICAgfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJhY3Rpb25JdGVtTW9kYWwiICBkYXRhLWJhY2tkcm9wPSJzdGF0aWMiIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWhpZGRlbj0idHJ1ZSI+CgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWxnIj4KCiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciBkcm9wZG93biI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIGNsb3NlLWFjdGlvbi1pdGVtLW1vZGVsIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0ibW9kYWwtdGl0bGUiPkFjdGlvbiBJdGVtPC9oND4KCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5IGFjdGlvbi1pdGVtLW1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0iYWxlcnQiIGFyaWEtbGFiZWw9ImNsb3NlIj4mdGltZXM7PC9hPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJmaWVsZEVycm9yTWVzc2FnZSI+UGxlYXNlIGZpbGwgYWxsIHJlcXVpcmVkIGZpZWxkczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ib3RoZXJFcnJvck1lc3NhZ2UiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPlBsZWFzZSBmaWxsIGFsbCByZXF1aXJlZCBmaWVsZHM8L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgPGZvcm0gYWN0aW9uPSIvcmVwb3J0cy9yZXBvcnQvaW5kZXgvYWN0aW9uSXRlbUZvcm0iIG1ldGhvZD0icG9zdCIgbmFtZT0iYWN0aW9uSXRlbUZvcm0iIGlkPSJhY3Rpb25JdGVtRm9ybSIgPgogICAgICAgICAgICAgICAgICAgCjxkaXY+CgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNCI+CiAgICAgICAgICAgICAgICA8bGFiZWw+QWN0aW9uIENhdGVnb3J5PHNwYW4gY2xhc3M9InJlcXVpcmVkLWluZGljYXRvciI+Kjwvc3Bhbj48L2xhYmVsPgogICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0iYWN0aW9uQ2F0ZWdvcnkiIG5hbWU9ImFjdGlvbkNhdGVnb3J5IiBjbGFzcz0iZm9ybS1jb250cm9sIHNlbGVjdDItYm94IG5lZWRzQWN0aW9uSXRlbVJvbGUiID4NCjxvcHRpb24gdmFsdWU9IiI+LVNlbGVjdCBDYXRlZ29yeS08L29wdGlvbj4NCjxvcHRpb24gdmFsdWU9IlJFUE9SVF9SRVFVRVNUIiA+UmVwb3J0IFJlcXVlc3Q8L29wdGlvbj4NCjxvcHRpb24gdmFsdWU9IlJFUVVFU1RfTUlTU0lOR19JTkZPUk1BVElPTiIgPlJlcXVlc3QgTWlzc2luZyBJbmZvcm1hdGlvbjwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iUFJPQ0VTU19DQVNFIiA+UHJvY2VzcyBDYXNlPC9vcHRpb24+DQo8b3B0aW9uIHZhbHVlPSJQRVJJT0RJQ19SRVBPUlQiID5BZ2dyZWdhdGUgUmVwb3J0PC9vcHRpb24+DQo8b3B0aW9uIHZhbHVlPSJDT05GSUdVUkVfUkVQT1JUIiA+Q29uZmlndXJlIFJlcG9ydDwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iQURIT0NfUkVQT1JUIiA+QWRob2MgUmVwb3J0PC9vcHRpb24+DQo8b3B0aW9uIHZhbHVlPSJSRVZJRVdfUkVQT1JUIiA+UmV2aWV3IFJlcG9ydDwvb3B0aW9uPg0KPC9zZWxlY3Q+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTQiPgogICAgICAgICAgICAgICAgPGxhYmVsPlByaW9yaXR5PHNwYW4gY2xhc3M9InJlcXVpcmVkLWluZGljYXRvciI+Kjwvc3Bhbj48L2xhYmVsPgogICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0icHJpb3JpdHkiIG5hbWU9InByaW9yaXR5IiBjbGFzcz0iZm9ybS1jb250cm9sIHNlbGVjdDItYm94IG5lZWRzQWN0aW9uSXRlbVJvbGUiID4NCjxvcHRpb24gdmFsdWU9IiI+PC9vcHRpb24+DQo8b3B0aW9uIHZhbHVlPSJISUdIIiA+SGlnaDwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iTUVESVVNIiA+TWVkaXVtPC9vcHRpb24+DQo8b3B0aW9uIHZhbHVlPSJMT1ciID5Mb3c8L29wdGlvbj4NCjwvc2VsZWN0PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy00Ij4KICAgICAgICAgICAgICAgIDxzY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgc2hhcmVkV2l0aExpc3RVcmwgPSAiL3JlcG9ydHMvdXNlclJlc3Qvc2hhcmVkV2l0aExpc3QiOwogICAgICAgICAgICAgICAgICAgIHNoYXJlZFdpdGhWYWx1ZXNVcmwgPSAiL3JlcG9ydHMvdXNlclJlc3Qvc2hhcmVkV2l0aFZhbHVlcyI7CiAgICAgICAgICAgICAgICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICBiaW5kU2hhcmVXaXRoKCQoJy5zaGFyZWRXaXRoQ29udHJvbCcpLCBzaGFyZWRXaXRoTGlzdFVybCwgc2hhcmVkV2l0aFZhbHVlc1VybCwiMTAwJSIsdHJ1ZSkKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgICAgICAgICAgQXNzaWduZWQgVG88c3BhbiBjbGFzcz0icmVxdWlyZWQtaW5kaWNhdG9yIj4qPC9zcGFuPjwvbGFiZWw+CiAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9InNoYXJlZFdpdGhDb250cm9sIGZvcm0tY29udHJvbCBuZWVkc0FjdGlvbkl0ZW1Sb2xlIiBpZD0iYXNzaWduZWRUbyIgbmFtZT0iYXNzaWduZWRUbyIgdmFsdWU9IiI+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy00Ij4KICAgICAgICAgICAgICAgIDxsYWJlbD5EdWUgRGF0ZTxzcGFuIGNsYXNzPSJyZXF1aXJlZC1pbmRpY2F0b3IiPio8L3NwYW4+PC9sYWJlbD4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZ1ZWx1eCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0ZXBpY2tlciB0b29sYmFySW5saW5lIHBhc3REYXRlTm90QWxsb3dlZCIgaWQ9ImR1ZURhdGVEaXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iZHVlRGF0ZSIgcGxhY2Vob2xkZXI9IlNlbGVjdCBEdWUgRGF0ZSIgY2xhc3M9ImZvcm0tY29udHJvbCBmdWVsdXggbmVlZHNBY3Rpb25JdGVtUm9sZSIgbmFtZT0iZHVlRGF0ZSIgdmFsdWU9IiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cC1idG4iPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iPgogICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWNhbGVuZGFyIj48L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPlRvZ2dsZSBDYWxlbmRhcjwvc3Bhbj4KICAgIDwvYnV0dG9uPgoKICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCBkYXRlcGlja2VyLWNhbGVuZGFyLXdyYXBwZXIiIHJvbGU9Im1lbnUiPgogICAgICAgIDxkaXYgY2xhc3M9ImRhdGVwaWNrZXItY2FsZW5kYXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLWNhbGVuZGFyLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9InByZXYiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tbGVmdCI+PC9zcGFuPjxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJzci1vbmx5Ij5QcmV2aW91cyBNb250aDwvc3Bhbj48L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ibmV4dCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1yaWdodCI+PC9zcGFuPjxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJzci1vbmx5Ij5OZXh0IE1vbnRoPC9zcGFuPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJ0aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vbnRoIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iMCI+SmFudWFyeTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iMSI+RmVicnVhcnk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtbW9udGg9IjIiPk1hcmNoPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSIzIj5BcHJpbDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iNCI+TWF5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSI1Ij5KdW5lPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSI2Ij5KdWx5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSI3Ij5BdWd1c3Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtbW9udGg9IjgiPlNlcHRlbWJlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iOSI+T2N0b2Jlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iMTAiPk5vdmVtYmVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSIxMSI+RGVjZW1iZXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPiA8c3BhbiBjbGFzcz0ieWVhciI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8dGFibGUgY2xhc3M9ImRhdGVwaWNrZXItY2FsZW5kYXItZGF5cyI+CiAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoPlN1PC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+TW88L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD5UdTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPldlPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+VGg8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD5GcjwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPlNhPC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgPHRib2R5PjwvdGJvZHk+CiAgICAgICAgICAgIDwvdGFibGU+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLWNhbGVuZGFyLWZvb3RlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImRhdGVwaWNrZXItdG9kYXkiPlRvZGF5PC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLXdoZWVscyIgYXJpYS1oaWRkZW49InRydWUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLXdoZWVscy1tb250aCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9ImhlYWRlciI+TW9udGg8L2gyPgogICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSIwIj48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+SmFuPC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iMSI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPkZlYjwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtbW9udGg9IjIiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5NYXI8L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSIzIj48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+QXByPC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iNCI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPk1heTwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtbW9udGg9IjUiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5KdW48L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSI2Ij48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+SnVsPC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iNyI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPkF1ZzwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtbW9udGg9IjgiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5TZXA8L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSI5Ij48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+T2N0PC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iMTAiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5Ob3Y8L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSIxMSI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPkRlYzwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRhdGVwaWNrZXItd2hlZWxzLXllYXIiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJoZWFkZXIiPlllYXI8L2gyPgogICAgICAgICAgICAgICAgPHVsPjwvdWw+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0ZXBpY2tlci13aGVlbHMtZm9vdGVyIGNsZWFyZml4Ij4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGRhdGVwaWNrZXItd2hlZWxzLWJhY2siPjxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWFycm93LWxlZnQiPjwvc3Bhbj48c3BhbiBjbGFzcz0ic3Itb25seSI+UmV0dXJuIHRvIENhbGVuZGFyPC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBkYXRlcGlja2VyLXdoZWVscy1zZWxlY3QiPlNlbGVjdCA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ic3Itb25seSI+TW9udGggYW5kIFllYXI8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy00Ij4KICAgICAgICAgICAgICAgIDxsYWJlbD5Db21wbGV0aW9uIERhdGU8L2xhYmVsPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZnVlbHV4Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyIHRvb2xiYXJJbmxpbmUgcGFzdERhdGVOb3RBbGxvd2VkIiBpZD0iY29tcGxldGlvbkRhdGVEaXYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0iY29tcGxldGlvbkRhdGUiIHBsYWNlaG9sZGVyPSJTZWxlY3QgQ29tcGxldGlvbiBEYXRlIiBjbGFzcz0iZm9ybS1jb250cm9sIGZ1ZWx1eCBuZWVkc0FjdGlvbkl0ZW1Sb2xlIiBuYW1lPSJjb21wbGV0aW9uRGF0ZSIgdmFsdWU9IiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cC1idG4iPgogICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iPgogICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWNhbGVuZGFyIj48L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPlRvZ2dsZSBDYWxlbmRhcjwvc3Bhbj4KICAgIDwvYnV0dG9uPgoKICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCBkYXRlcGlja2VyLWNhbGVuZGFyLXdyYXBwZXIiIHJvbGU9Im1lbnUiPgogICAgICAgIDxkaXYgY2xhc3M9ImRhdGVwaWNrZXItY2FsZW5kYXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLWNhbGVuZGFyLWhlYWRlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9InByZXYiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tbGVmdCI+PC9zcGFuPjxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJzci1vbmx5Ij5QcmV2aW91cyBNb250aDwvc3Bhbj48L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ibmV4dCI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1yaWdodCI+PC9zcGFuPjxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJzci1vbmx5Ij5OZXh0IE1vbnRoPC9zcGFuPjwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJ0aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1vbnRoIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iMCI+SmFudWFyeTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iMSI+RmVicnVhcnk8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtbW9udGg9IjIiPk1hcmNoPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSIzIj5BcHJpbDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iNCI+TWF5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSI1Ij5KdW5lPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSI2Ij5KdWx5PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSI3Ij5BdWd1c3Q8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtbW9udGg9IjgiPlNlcHRlbWJlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iOSI+T2N0b2Jlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gZGF0YS1tb250aD0iMTAiPk5vdmVtYmVyPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBkYXRhLW1vbnRoPSIxMSI+RGVjZW1iZXI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPiA8c3BhbiBjbGFzcz0ieWVhciI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8dGFibGUgY2xhc3M9ImRhdGVwaWNrZXItY2FsZW5kYXItZGF5cyI+CiAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoPlN1PC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+TW88L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD5UdTwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPldlPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+VGg8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD5GcjwvdGg+CiAgICAgICAgICAgICAgICAgICAgPHRoPlNhPC90aD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgPHRib2R5PjwvdGJvZHk+CiAgICAgICAgICAgIDwvdGFibGU+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLWNhbGVuZGFyLWZvb3RlciI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImRhdGVwaWNrZXItdG9kYXkiPlRvZGF5PC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLXdoZWVscyIgYXJpYS1oaWRkZW49InRydWUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlcGlja2VyLXdoZWVscy1tb250aCI+CiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9ImhlYWRlciI+TW9udGg8L2gyPgogICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSIwIj48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+SmFuPC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iMSI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPkZlYjwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtbW9udGg9IjIiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5NYXI8L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSIzIj48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+QXByPC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iNCI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPk1heTwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtbW9udGg9IjUiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5KdW48L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSI2Ij48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+SnVsPC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iNyI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPkF1ZzwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtbW9udGg9IjgiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5TZXA8L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSI5Ij48YnV0dG9uIHR5cGU9ImJ1dHRvbiI+T2N0PC9idXR0b24+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS1tb250aD0iMTAiPjxidXR0b24gdHlwZT0iYnV0dG9uIj5Ob3Y8L2J1dHRvbj48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLW1vbnRoPSIxMSI+PGJ1dHRvbiB0eXBlPSJidXR0b24iPkRlYzwvYnV0dG9uPjwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRhdGVwaWNrZXItd2hlZWxzLXllYXIiPgogICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJoZWFkZXIiPlllYXI8L2gyPgogICAgICAgICAgICAgICAgPHVsPjwvdWw+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0ZXBpY2tlci13aGVlbHMtZm9vdGVyIGNsZWFyZml4Ij4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGRhdGVwaWNrZXItd2hlZWxzLWJhY2siPjxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLWFycm93LWxlZnQiPjwvc3Bhbj48c3BhbiBjbGFzcz0ic3Itb25seSI+UmV0dXJuIHRvIENhbGVuZGFyPC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBkYXRlcGlja2VyLXdoZWVscy1zZWxlY3QiPlNlbGVjdCA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ic3Itb25seSI+TW9udGggYW5kIFllYXI8L3NwYW4+PC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy00Ij4KICAgICAgICAgICAgICAgIDxsYWJlbD5TdGF0dXM8L2xhYmVsPgogICAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPSJzdGF0dXMiIGNsYXNzPSJmb3JtLWNvbnRyb2wgc2VsZWN0Mi1ib3ggbmVlZHNBY3Rpb25JdGVtUm9sZSIgaWQ9InN0YXR1cyIgPg0KPG9wdGlvbiB2YWx1ZT0iT1BFTiIgPk9wZW48L29wdGlvbj4NCjxvcHRpb24gdmFsdWU9IklOX1BST0dSRVNTIiA+SW4gUHJvZ3Jlc3M8L29wdGlvbj4NCjxvcHRpb24gdmFsdWU9Ik5FRURfQ0xBUklGSUNBVElPTiIgPk5lZWQgQ2xhcmlmaWNhdGlvbjwvb3B0aW9uPg0KPG9wdGlvbiB2YWx1ZT0iQ0xPU0VEIiA+Q2xvc2VkPC9vcHRpb24+DQo8L3NlbGVjdD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4KICAgICAgICAgICAgICAgIDxsYWJlbD5EZXNjcmlwdGlvbjxzcGFuIGNsYXNzPSJyZXF1aXJlZC1pbmRpY2F0b3IiPio8L3NwYW4+PC9sYWJlbD4KICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD0iZGVzY3JpcHRpb24iIG5hbWU9ImRlc2NyaXB0aW9uIiByb3dzPSIxNSIgY29scz0iNDAiIG1heGxlbmd0aD0iNDAwMCIgY2xhc3M9ImZvcm0tY29udHJvbCBuZWVkc0FjdGlvbkl0ZW1Sb2xlIiA+PC90ZXh0YXJlYT4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNCIgaWQ9ImxpbmtEaXYiIHN0eWxlPSJkaXNwbGF5OiBub25lIj4KICAgICAgICAgICAgICAgIDxsYWJlbD5Bc3NvY2lhdGVkIFJlcG9ydDwvbGFiZWw+PGJyPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iIiBkYXRhLWJhc2UtdXJsPSIvcmVwb3J0cy9yZXBvcnQvc2hvd0ZpcnN0U2VjdGlvbiIgaWQ9ImxpbmsiPjwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy00IiBpZD0ibGlua0NvbmZpZ0RpdiIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPgogICAgICAgICAgICAgICAgPGxhYmVsPkFzc29jaWF0ZWQgQ29uZmlndXJhdGlvbjwvbGFiZWw+PGJyPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iIiBkYXRhLWJhc2UtdXJsPSIvcmVwb3J0cy9wZXJpb2RpY1JlcG9ydC92aWV3IiBpZD0iY29uZmlnTGluayI+PC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTQiIGlkPSJsaW5rUmVxdWVzdERpdiIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPgogICAgICAgICAgICAgICAgPGxhYmVsPkFzc29jaWF0ZWQgUmVwb3J0IFJlcXVlc3Q8L2xhYmVsPjxicj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiIgZGF0YS1iYXNlLXVybD0iL3JlcG9ydHMvcmVwb3J0UmVxdWVzdC9zaG93IiBpZD0icmVxdWVzdExpbmsiPjwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy00Ij4KICAgICAgICAgICAgICAgPGxhYmVsPkNyZWF0ZWQgQnk8L2xhYmVsPgogICAgICAgICAgICAgICA8ZGl2IGlkPSJjcmVhdGVkQnkiPlNoaXZhLlByYXNhZDwvZGl2PgogICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhY3Rpb25JdGVtSWQiIGlkPSJhY3Rpb25JdGVtSWQiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImFwcFR5cGUiIGlkPSJhcHBUeXBlIiB2YWx1ZT0iIiAvPgogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy00Ij4KICAgICAgICAgICAgICAgPGxhYmVsPkRhdGUgQ3JlYXRlZDwvbGFiZWw+CiAgICAgICAgICAgICAgIDxkaXYgaWQ9ImRhdGVDcmVhdGVkIiBjbGFzcz0iZGF0ZUNyZWF0ZWQiPjwvZGl2PgogICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkYXRlQ3JlYXRlZCIgdmFsdWU9IiIgaWQ9ImRhdGVDcmVhdGVkIiAvPgogICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWlWZXJzaW9uIiB2YWx1ZT0iIiBpZD0iYWlWZXJzaW9uIiAvPgo8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICA8IS0tIEV4ZWN1dGVkIHJlcG9ydCBpZCBmaWVsZCBpcyBrZXB0IC0tPgogICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZXhlY3V0ZWRSZXBvcnRJZCIgaWQ9ImV4ZWN1dGVkUmVwb3J0SWQiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhc3NpZ25lZFRvTmFtZSIgaWQ9ImFzc2lnbmVkVG9OYW1lIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY2FzZU51bWJlciIgaWQ9ImNhc2VOdW1iZXIiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJlcnJvclR5cGUiIGlkPSJlcnJvclR5cGUiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkYXRhVHlwZSIgaWQ9ImRhdGFUeXBlQWkiIHZhbHVlPSIiIC8+CiAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJjYXNlVmVyc2lvbiIgaWQ9ImNhc2VWZXJzaW9uIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iY2FwYUlkIiBpZD0iY2FwYUlkIiB2YWx1ZT0iIiAvPgogICAgICAgICAgICAgICA8L2Zvcm0+CgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICA8ZGl2ICBjbGFzcz0iYnV0dG9ucyBjcmVhdGlvbkJ1dHRvbnMiPgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iY3JlYXRpb25TY3JlZW5CdXR0b24iIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBzYXZlLWFjdGlvbi1pdGVtIGNyZWF0aW9uQnV0dG9uIiB2YWx1ZT0iU2F2ZSIgPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iZWRpdFNjcmVlbkJ1dHRvbiIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iaGlkZSBidG4gYnRuLXByaW1hcnkgdXBkYXRlLWFjdGlvbi1pdGVtIGNvbnN1bHRhdGlvbkJ1dHRvbnMiIHZhbHVlPSJVcGRhdGUiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0idmlld1NjcmVlbkJ1dHRvbiIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iaGlkZSBidG4gYnRuLXByaW1hcnkgZWRpdC1hY3Rpb24taXRlbSBjb25zdWx0YXRpb25CdXR0b25zIiB2YWx1ZT0iRWRpdCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJkZWxldGVBY3Rpb25JdGVtIiB0eXBlPSJidXR0b24iIGNsYXNzPSJoaWRlIGJ0biBidG4tcHJpbWFyeSBhY3Rpb24taXRlbS1kZWxldGUgY29uc3VsdGF0aW9uQnV0dG9ucyIgdmFsdWU9IkRlbGV0ZSI+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IGNsb3NlLWFjdGlvbi1pdGVtLW1vZGVsIj5DbG9zZSA8L2J1dHRvbj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8IS0tIEluZGV4IGtlcHQgZm9yIHRoZSBwdXJwb3NlIGlmIGludGVncmF0aW5nIHRoaXMgd2l0aCBvdGhlciBhcHBzIGFuZCBrbm93aW5nIHRoZSBjdXJyZW50IGluZGV4LiAgLS0+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJpbmRleCIgaWQ9ImluZGV4IiB2YWx1ZT0iIiAvPgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0iYWN0aW9uSXRlbUxpc3RNb2RhbCIgIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1sZyI+CgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIgZHJvcGRvd24iPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJtb2RhbCIgYXJpYS1sYWJlbD0iQ2xvc2UiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1vZGFsLXRpdGxlIj5BY3Rpb24gSXRlbTwvaDQ+CgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSBhY3Rpb24taXRlbS1tb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgIDx0YWJsZSBpZD0iYWN0aW9uSXRlbUxpc3QiIGNsYXNzPSJyb3ctYm9yZGVyIGhvdmVyIiB3aWR0aD0iMTAwJSI+CiAgICAgICAgICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+QXNzaWduZWQgVG88L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkRlc2NyaXB0aW9uPC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5EdWUgRGF0ZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGg+UHJpb3JpdHk8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoPlN0YXR1czwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPC90aGVhZD4KICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgPGRpdiAgY2xhc3M9ImJ1dHRvbnMgY3JlYXRpb25CdXR0b25zIj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tZGVmYXVsdCBjbG9zZS1hY3Rpb24taXRlbS1tb2RlbCI+Q2xvc2UgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+CgogIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJjb25maXJtYXRpb25Nb2RhbCIgIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGFyaWEtbGFiZWxsZWRieT0iY29uZmlybWF0aW9uTW9kYWxMYWJlbCIKICAgICBhcmlhLWhpZGRlbj0idHJ1ZSI+CiAgICA8ZGl2IGNsYXNzPSJ2ZXJ0aWNhbC1hbGlnbm1lbnQtaGVscGVyIj4KCiAgICAgICAgPCEtLSBNb2RhbCBEaWFsb2cgc3RhcnRzIC0tPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyB2ZXJ0aWNhbC1hbGlnbi1jZW50ZXIiPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CgogICAgICAgICAgICAgICAgPCEtLSBNb2RhbCBoZWFkZXIgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPGg0PjxzcGFuIGNsYXNzPSJtb2RhbEhlYWRlciI+PC9zcGFuPjwvaDQ+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8IS0tIE1vZGFsIGJvZHkgLS0+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb25maXJtYXRpb25NZXNzYWdlIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iIHN0eWxlPSJmb250LXdlaWdodDpib2xkOyI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8IS0tIE1vZGFsIGZvb3RlciAtLT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRhbmdlciBva0J1dHRvbiIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXRyYXNoIGljb24td2hpdGUiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgRGVsZXRlIFJlY29yZAogICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1kZWZhdWx0IiBkYXRhLWRpc21pc3M9Im1vZGFsIj5DYW5jZWw8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC9kaXY+PCEtLSBtb2RhbC1jb250ZW50IGVuZHMtLT4KICAgICAgICA8L2Rpdj48IS0tIG1vZGFsLWRpYWxvZyBlbmRzLS0+CiAgICA8L2Rpdj4KCjwvZGl2PjwhLS0gbW9kYWwgLS0+CgogIDxkaXYgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPgogICAgPGRpdiBpZD0iYXJjaGl2ZWRGaWx0ZXIiPgogICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94IGNoZWNrYm94LXByaW1hcnkiIHN0eWxlPSJwYWRkaW5nLXRvcDogNnB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX2luY2x1ZGVBcmNoaXZlZCIgLz48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9ImluY2x1ZGVBcmNoaXZlZCIgaWQ9ImluY2x1ZGVBcmNoaXZlZCIgIC8+CiAgICAgICAgICAgIDxsYWJlbCBmb3I9ImluY2x1ZGVBcmNoaXZlZCI+U2hvdyBBcmNoaXZlZDwvbGFiZWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+CjxzY3JpcHQ+CiAgICB2YXIgc2Vzc2lvblN0b3JhZ2VhcmNoaXZlZEZpbHRlclZhcmlhYmxlTmFtZSA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cLy9nLCAiIikgKyAiLmFyY2hpdmVkRmlsdGVyIjsKICAgIHZhciBmaWx0ZXJPbiA9IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oc2Vzc2lvblN0b3JhZ2VhcmNoaXZlZEZpbHRlclZhcmlhYmxlTmFtZSkKICAgICQoIiNpbmNsdWRlQXJjaGl2ZWQiKS5wcm9wKCdjaGVja2VkJywgKGZpbHRlck9uID09ICJ0cnVlIikpOwoKICAgIGZ1bmN0aW9uIGluaXRBcmNoaXZlRmlsdGVyKHRhYmxlKSB7CiAgICAgICAgJCgiI2luY2x1ZGVBcmNoaXZlZCIpLm9uKCJjaGFuZ2UiLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKHNlc3Npb25TdG9yYWdlYXJjaGl2ZWRGaWx0ZXJWYXJpYWJsZU5hbWUsICQoIiNpbmNsdWRlQXJjaGl2ZWQiKS5pcygiOmNoZWNrZWQiKSk7CiAgICAgICAgICAgIHRhYmxlLmRyYXcoKTsKICAgICAgICB9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2FwcC9lbWFpbE1vZGFsLWMzMjhmNjQ1MmMxNWVlNWI5NjEyZDU3OTkzNjlkYTgzLmpzIiA+PC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICB2YXIgZW1haWxBZGRBbGxVcmw9Ii9yZXBvcnRzL2VtYWlsL2FqYXhBZGRBbGwiOwo8L3NjcmlwdD4KPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSBjb3B5QW5kUGFzdGVFbWFpbE1vZGFsIiBpZD0iY29weUFuZFBhc3RlRW1haWxNb2RhbCIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9IkNvcHkvUGFzdGUgRGlhbG9nIj4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyIgcm9sZT0iZG9jdW1lbnQiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgb25jbGljaz0nY2xvc2VBbGxDb3B5UGFzdGVNb2RhbHMoKTsnIGFyaWEtbGFiZWw9IkNsb3NlIj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvc3Bhbj48L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0ibW9kYWwtdGl0bGUiIGlkPSJteU1vZGFsTGFiZWwiPlBhc3RlIFZhbHVlczo8L2g0PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSBjb250YWluZXItZmx1aWQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+RGVsaW1pdGVyczo8L2xhYmVsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciIGlkPSJkZWxpbWl0ZXItb3B0aW9ucyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jb2wiIHRpdGxlPSJObyBkZWxpbWl0ZXJzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJuby1ib2xkIGFkZC1jdXJzb3IiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBuYW1lPSJkZWxpbWl0ZXIiIHZhbHVlPSJub25lIiBjaGVja2VkPSJjaGVja2VkIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb25lCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jb2wiIHRpdGxlPSJjb21tYSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibm8tYm9sZCBhZGQtY3Vyc29yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0iZGVsaW1pdGVyIiB2YWx1ZT0iLCIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29tbWEKICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLWNvbCIgdGl0bGU9InNlbWktY29sdW1uIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJuby1ib2xkIGFkZC1jdXJzb3IiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InJhZGlvIiBpZD0ic2VtaWNvbG9uLWRlbGltaXRlciIgbmFtZT0iZGVsaW1pdGVyIiB2YWx1ZT0iOyIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VtaS1Db2xvbgogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tY29sIiB0aXRsZT0ic3BhY2UiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9Im5vLWJvbGQgYWRkLWN1cnNvciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9ImRlbGltaXRlciIgdmFsdWU9IiAiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNwYWNlCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jb2wiIHRpdGxlPSJuZXctbGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibm8tYm9sZCBhZGQtY3Vyc29yIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJyYWRpbyIgbmFtZT0iZGVsaW1pdGVyIiB2YWx1ZT0iXG4iLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ldy1MaW5lCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jb2wiIHRpdGxlPSJPdGhlcnMiPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9Im5vLWJvbGQgYWRkLWN1cnNvciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9ImRlbGltaXRlciIgdmFsdWU9Im90aGVycyIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgT3RoZXJzCiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1jb2wiPgogICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImNfbl9wX290aGVyX2RlbGltaXRlciIgc3R5bGU9IndpZHRoOiA1MHB4OyI+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBjb250ZW50LXJvdyI+CiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPSJjb3B5UGFzdGVDb250ZW50IiBzdHlsZT0iYm9yZGVyOiAwOyI+PC90ZXh0YXJlYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJlbWFpbENvcHlQYXN0ZUVycm9yIiBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIGFsZXJ0LWRpc21pc3NpYmxlIGZvcmNlTGluZVdyYXAiIHJvbGU9ImFsZXJ0IiBzdHlsZT0iZGlzcGxheTogbm9uZTsgbWFyZ2luLXJpZ2h0OiAyMHB4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0iYWxlcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3Itb25seSI+Q2xvc2U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJlbWFpbENvcHlQYXN0ZUVycm9yQ29udGVudCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZW1haWxDb3B5UGFzdGVXYXJuIiBjbGFzcz0iYWxlcnQgYWxlcnQtd2FybmluZyBhbGVydC1kaXNtaXNzaWJsZSBmb3JjZUxpbmVXcmFwIiByb2xlPSJhbGVydCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7IG1hcmdpbi1yaWdodDogMjBweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9ImFsZXJ0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIj4mdGltZXM7PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPkNsb3NlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0iZW1haWxDb3B5UGFzdGVXYXJuQ29udGVudCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRlZmF1bHQgY2FuY2VsIiBvbmNsaWNrPSdjbG9zZUFsbENvcHlQYXN0ZU1vZGFscygpOyc+Q2FuY2VsPC9idXR0b24+CiAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyBjb25maXJtLXBhc3RlLWVtYWlsLXZhbHVlcyI+Q29uZmlybTwvYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4KICAgPC9kaXY+PC9kaXY+PC9kaXY+CgogICAgICAgIDwvZGl2PgogICAgICAgIDwhLS0gRW5kIGNvbnRlbnQgLS0+CiAgICAKICAgIDwvZGl2PgogICAgPCEtLSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAtLT4KICAgIDwhLS0gRW5kIFJpZ2h0IGNvbnRlbnQgaGVyZSAtLT4KICAgIDwhLS0gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gLS0+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJwdnItbG9hZGVyLWJnIj4KICAgIDxkaXYgY2xhc3M9ImxvYWRlciI+CiAgICAgICAgPHN2ZyBjbGFzcz0iY2lyY3VsYXIiIHZpZXdCb3g9IjI1IDI1IDUwIDUwIj4KICAgICAgICAgICAgPGNpcmNsZSBjbGFzcz0icGF0aCIgY3g9IjUwIiBjeT0iNTAiIHI9IjIwIiBmaWxsPSJub25lIiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1taXRlcmxpbWl0PSIxMCI+PC9jaXJjbGU+CiAgICAgICAgPC9zdmc+CiAgICA8L2Rpdj4KPC9kaXY+CjwhLS0gVXNlZCBmb3IgbG9hZGVyLS0+CjxkaXYgY2xhc3M9InB2bG9hZGVyIj48L2Rpdj4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2FwcC9qcXVlcnkuY29yZS0yYzdjZGYxMjhiNDJkODQ5MjM1ZGVhOGNhZGQ4NzliOC5qcyIgPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvcmVwb3J0cy9hc3NldHMvYXBwL2pxdWVyeS5hcHAtNzgyZDhmODdhYzI3OWEwMTliMzdiMThhMzE1NjU0YjIuanMiID48L3NjcmlwdD4KCiAgICAKCgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL3N0b3JlLm1vZGVybi5taW4tZWU4NmRiZGU2NzM1NjA4NmU1M2RmZmRkMzFjNjg2N2QuanMiID48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iL3JlcG9ydHMvYXNzZXRzL2pxdWVyeS9jdXN0b21pc2UtanF1ZXJ5LWlkbGVUaW1lb3V0LTYyODZmZTAyNmJkZjc4YTZjMzhhMjljZmQ4ZDk3OWM4LmpzIiA+PC9zY3JpcHQ+IAo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQoKICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkgewogICAgICAkKGRvY3VtZW50KS5pZGxlVGltZW91dCh7CiAgICAgIHJlZGlyZWN0VXJsOiAgImh0dHBzOlx1MDAyZlx1MDAyZnB2ci1wZXJmLnJ4bG9naXguY29tXHUwMDJmcmVwb3J0cy9sb2dvdXQiLAogICAgICBpZGxlVGltZUxpbWl0OiAxODAwLAogICAgICBzZXNzaW9uS2VlcEFsaXZlVXJsOiAiaHR0cHM6XHUwMDJmXHUwMDJmcHZyLXBlcmYucnhsb2dpeC5jb21cdTAwMmZyZXBvcnRzL2tlZXAtYWxpdmUiLAogICAgICBzZXNzaW9uS2VlcEFsaXZlVGltZXI6IDYwLAogICAgICBlbmFibGVEaWFsb2c6IHRydWUsCiAgICAgIGRpYWxvZ0Rpc3BsYXlMaW1pdDogMzAwLAogICAgICBhY3Rpdml0eUV2ZW50czogJ2NsaWNrIGtleXByZXNzJywKICAgICAgY3VzdG9tQ2FsbGJhY2s6IGZ1bmN0aW9uKCkgewogICAgICAgICAgdmFyIGZvcm1zID0gJCgnZm9ybScpOwogICAgICAgICAgICBpZihmb3Jtcy5maW5kKCcuY2hhbmdlZC1pbnB1dCcpLmxlbmd0aCl7CiAgICAgICAgICAgICAgICBhbGVydCgkLmkxOG4uXygnbmF2aWdhdGVBd2F5Q2hhbmdlc0xvc3RNZXNzYWdlJykpOwogICAgICAgICAgICAgICAgY2xlYXJGb3JtSW5wdXRzQ2hhbmdlRmxhZyhmb3Jtcyk7CiAgICAgICAgICAgIH0KICAgICAgfQogICAgICB9KTsKICAgIH0pOwoNCjwvc2NyaXB0Pg0KCgo8L2JvZHk+CjwvaHRtbD4K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="33602468" offset="0" length="16384" />
          <PacketInfo time="33602593" offset="16384" length="16384" />
          <PacketInfo time="33602921" offset="32768" length="16384" />
          <PacketInfo time="33603015" offset="49152" length="16370" />
          <PacketInfo time="33603031" offset="65522" length="14" />
          <PacketInfo time="33603203" offset="65536" length="16384" />
          <PacketInfo time="33603359" offset="81920" length="16354" />
          <PacketInfo time="33603375" offset="98274" length="30" />
          <PacketInfo time="33603375" offset="98304" length="223" />
          <PacketInfo time="33603390" offset="98527" length="5" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>